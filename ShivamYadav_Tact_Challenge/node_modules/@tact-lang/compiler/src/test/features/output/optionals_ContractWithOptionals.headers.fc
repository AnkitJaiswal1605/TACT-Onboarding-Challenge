;;
;; Header files for ContractWithOptionals
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; $SomeGenericStruct$_store
builder $SomeGenericStruct$_store(builder build_0, (int, int, int, int, int) v) inline;

;; $SomeGenericStruct$_load
(slice, ((int, int, int, int, int))) $SomeGenericStruct$_load(slice sc_0) inline;

;; $SomeGenericStruct$_not_null
((int, int, int, int, int)) $SomeGenericStruct$_not_null(tuple v) inline;

;; $StructWithOptionals$_store
builder $StructWithOptionals$_store(builder build_0, (int, int, cell, slice, tuple) v) inline;

;; $SomeGenericStruct$_as_optional
tuple $SomeGenericStruct$_as_optional((int, int, int, int, int) v) inline;

;; $StructWithOptionals$_load
(slice, ((int, int, cell, slice, tuple))) $StructWithOptionals$_load(slice sc_0) inline;

;; $StructWithOptionals$_as_optional
tuple $StructWithOptionals$_as_optional((int, int, cell, slice, tuple) v) inline;

;; $Update$_load
(slice, ((int, int, cell, slice, tuple, tuple))) $Update$_load(slice sc_0) inline_ref;

;; $StructWithOptionals$_not_null
((int, int, cell, slice, tuple)) $StructWithOptionals$_not_null(tuple v) inline;

;; $ContractWithOptionals$_store
builder $ContractWithOptionals$_store(builder build_0, (int, int, cell, slice, tuple, tuple) v) inline;

;; $ContractWithOptionals$_load
(slice, ((int, int, cell, slice, tuple, tuple))) $ContractWithOptionals$_load(slice sc_0) inline;

;; $SomeGenericStruct$_to_tuple
tuple $SomeGenericStruct$_to_tuple(((int, int, int, int, int)) v) inline;

;; $SomeGenericStruct$_to_opt_tuple
tuple $SomeGenericStruct$_to_opt_tuple(tuple v) inline;

;; $SomeGenericStruct$_to_external
(int, int, int, int, int) $SomeGenericStruct$_to_external(((int, int, int, int, int)) v) inline;

;; $SomeGenericStruct$_to_opt_external
tuple $SomeGenericStruct$_to_opt_external(tuple v) inline;

;; $StructWithOptionals$_to_tuple
tuple $StructWithOptionals$_to_tuple(((int, int, cell, slice, tuple)) v) inline;

;; $StructWithOptionals$_to_opt_tuple
tuple $StructWithOptionals$_to_opt_tuple(tuple v) inline;

;; $StructWithOptionals$_to_external
(int, int, cell, slice, tuple) $StructWithOptionals$_to_external(((int, int, cell, slice, tuple)) v) inline;

;; $StructWithOptionals$_to_opt_external
tuple $StructWithOptionals$_to_opt_external(tuple v) inline;

;; $ContractWithOptionals$init$_load
(slice, ((int, int, cell, slice, tuple, tuple))) $ContractWithOptionals$init$_load(slice sc_0) inline_ref;

;; $ContractWithOptionals$_contract_init
(int, int, cell, slice, tuple, tuple) $ContractWithOptionals$_contract_init(int $a, int $b, cell $c, slice $d, tuple $e, tuple $f) impure inline_ref;

;; $ContractWithOptionals$_contract_load
(int, int, cell, slice, tuple, tuple) $ContractWithOptionals$_contract_load() impure inline_ref;

;; $ContractWithOptionals$_contract_store
() $ContractWithOptionals$_contract_store((int, int, cell, slice, tuple, tuple) v) impure inline;

;; $ContractWithOptionals$_fun_isNotNullA
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_isNotNullB
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_isNotNullC
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_isNotNullD
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_isNotNullE
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_isNotNullF
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_nullA
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_nullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_nullB
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_nullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_nullC
((int, int, cell, slice, tuple, tuple), cell) $ContractWithOptionals$_fun_nullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_nullD
((int, int, cell, slice, tuple, tuple), slice) $ContractWithOptionals$_fun_nullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_nullE
((int, int, cell, slice, tuple, tuple), tuple) $ContractWithOptionals$_fun_nullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_nullF
((int, int, cell, slice, tuple, tuple), tuple) $ContractWithOptionals$_fun_nullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_notNullA
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_notNullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_notNullB
((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_notNullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_notNullC
((int, int, cell, slice, tuple, tuple), cell) $ContractWithOptionals$_fun_notNullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_notNullD
((int, int, cell, slice, tuple, tuple), slice) $ContractWithOptionals$_fun_notNullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_notNullE
((int, int, cell, slice, tuple, tuple), (int, int, int, int, int)) $ContractWithOptionals$_fun_notNullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $ContractWithOptionals$_fun_notNullF
((int, int, cell, slice, tuple, tuple), (int, int, cell, slice, tuple)) $ContractWithOptionals$_fun_notNullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;

;; $SomeGenericStruct$_constructor_value1_value2_value3_value4_value5
((int, int, int, int, int)) $SomeGenericStruct$_constructor_value1_value2_value3_value4_value5(int value1, int value2, int value3, int value4, int value5) inline;

;; $ContractWithOptionals$_fun_testVariables
((int, int, cell, slice, tuple, tuple), (int, int, int, int, int)) $ContractWithOptionals$_fun_testVariables((int, int, cell, slice, tuple, tuple) $self) impure inline_ref;
