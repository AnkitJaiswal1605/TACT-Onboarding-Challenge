#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "intrinsics_IntrinsicsTester.headers.fc";
#include "intrinsics_IntrinsicsTester.stdlib.fc";
#include "intrinsics_IntrinsicsTester.constants.fc";
#include "intrinsics_IntrinsicsTester.storage.fc";

;;
;; Contract IntrinsicsTester functions
;;

(int, slice, slice, cell, int, int) $IntrinsicsTester$_contract_init() impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = (10123400000, __gen_slice_string_fddd37b8318ce351584ce13d887b2bdfd89a245250fa3ccc433cc820d90bcae1(), __gen_slice_address_58e2d2fc9446d00e70b3ad3ea1eb88797c323bae517f2527f807f62d09a56fdc(), __gen_cell_cell_be033138a8e284b3da1cee56e92447de2368f6431d64a3c6fe4db3183aeb9c36(), 512, 83814198383102558219731078260892729932246618004265700685467928187377105751529);
    return ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f);
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getTons((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), 10123400000);
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getTons2((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'a);
}

((int, slice, slice, cell, int, int), slice) $IntrinsicsTester$_fun_getString((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __gen_slice_string_fddd37b8318ce351584ce13d887b2bdfd89a245250fa3ccc433cc820d90bcae1());
}

((int, slice, slice, cell, int, int), slice) $IntrinsicsTester$_fun_getString2((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'b);
}

((int, slice, slice, cell, int, int), slice) $IntrinsicsTester$_fun_getAddress((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __gen_slice_address_58e2d2fc9446d00e70b3ad3ea1eb88797c323bae517f2527f807f62d09a56fdc());
}

((int, slice, slice, cell, int, int), slice) $IntrinsicsTester$_fun_getAddress2((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'c);
}

((int, slice, slice, cell, int, int), cell) $IntrinsicsTester$_fun_getCell((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __gen_cell_cell_be033138a8e284b3da1cee56e92447de2368f6431d64a3c6fe4db3183aeb9c36());
}

((int, slice, slice, cell, int, int), cell) $IntrinsicsTester$_fun_getCell2((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'd);
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getPow((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), 512);
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getPow2((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'e);
}

((int, slice, slice, cell, int, int), cell) $IntrinsicsTester$_fun_getComment((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __gen_cell_comment_947a54d50e20851945ec9cfe3440edd107efea5a57acbc50214c6c44631a8a45());
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getHash((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), 83814198383102558219731078260892729932246618004265700685467928187377105751529);
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getHash2((int, slice, slice, cell, int, int) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'f);
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getHash3((int, slice, slice, cell, int, int) $self, slice $src) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), string_hash($src));
}

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_fun_getHash4((int, slice, slice, cell, int, int) $self, slice $src) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), string_hash($src));
}

;;
;; Receivers of a Contract IntrinsicsTester
;;

((int, slice, slice, cell, int, int), ()) $IntrinsicsTester$_internal_text_85d288384c0043458b02803cb22059f68803c553c3656344346468dac961f246((int, slice, slice, cell, int, int) $self) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

((int, slice, slice, cell, int, int), ()) $IntrinsicsTester$_internal_text_51ea0ec5a90299f616966ef215cadec5a82ff175f8d6ea7e74c22456c9f5d6dd((int, slice, slice, cell, int, int) $self) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    $global_emit(__gen_cell_comment_947a54d50e20851945ec9cfe3440edd107efea5a57acbc50214c6c44631a8a45());
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

;;
;; Get methods of a Contract IntrinsicsTester
;;

_ %getTons() method_id(85126) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getTons();
    return res;
}

_ %getTons2() method_id(72025) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getTons2();
    return res;
}

_ %getString() method_id(97624) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getString();
    return res;
}

_ %getString2() method_id(123179) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getString2();
    return res;
}

_ %getAddress() method_id(67571) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getAddress();
    return res;
}

_ %getAddress2() method_id(103926) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getAddress2();
    return res;
}

_ %getCell() method_id(83057) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getCell();
    return res;
}

_ %getCell2() method_id(94033) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getCell2();
    return res;
}

_ %getPow() method_id(93948) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getPow();
    return res;
}

_ %getPow2() method_id(92025) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getPow2();
    return res;
}

_ %getComment() method_id(116303) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getComment();
    return res;
}

_ %getHash() method_id(120167) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getHash();
    return res;
}

_ %getHash2() method_id(125641) {
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getHash2();
    return res;
}

_ %getHash3(slice $$src) method_id(129768) {
    slice $src = $$src;
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getHash3($src);
    return res;
}

_ %getHash4(slice $$src) method_id(100879) {
    slice $src = $$src;
    var self = $IntrinsicsTester$_contract_load();
    var res = self~$IntrinsicsTester$_fun_getHash4($src);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmcG1faYmyptEHfS4sz4acijdw3Cjz4k3PnnzfTpRfbcDZ";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract IntrinsicsTester
;;

((int, slice, slice, cell, int, int), int) $IntrinsicsTester$_contract_router_internal((int, slice, slice, cell, int, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Deploy" message
        if (text_op == 0x85d288384c0043458b02803cb22059f68803c553c3656344346468dac961f246) {
            self~$IntrinsicsTester$_internal_text_85d288384c0043458b02803cb22059f68803c553c3656344346468dac961f246();
            return (self, true);
        }
        
        ;; Receive "emit_1" message
        if (text_op == 0x51ea0ec5a90299f616966ef215cadec5a82ff175f8d6ea7e74c22456c9f5d6dd) {
            self~$IntrinsicsTester$_internal_text_51ea0ec5a90299f616966ef215cadec5a82ff175f8d6ea7e74c22456c9f5d6dd();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $IntrinsicsTester$_contract_load();
    
    ;; Handle operation
    int handled = self~$IntrinsicsTester$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $IntrinsicsTester$_contract_store(self);
}
