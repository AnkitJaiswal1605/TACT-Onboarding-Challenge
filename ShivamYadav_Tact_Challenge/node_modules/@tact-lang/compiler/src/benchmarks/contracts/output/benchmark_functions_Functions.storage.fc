;;
;; Type: Add
;; Header: 0x3194e434
;; TLB: add#3194e434 value:int257 = Add
;;

(slice, ((int))) $Add$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 831841332);
    var v'value = sc_0~load_int(257);
    return (sc_0, (v'value));
}

;;
;; Type: Sub
;; Header: 0x9d605aeb
;; TLB: sub#9d605aeb value:int257 = Sub
;;

(slice, ((int))) $Sub$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2640337643);
    var v'value = sc_0~load_int(257);
    return (sc_0, (v'value));
}

;;
;; Type: Functions
;;

builder $Functions$_store(builder build_0, (int) v) inline {
    var (v'value) = v;
    build_0 = build_0.store_int(v'value, 257);
    return build_0;
}

(slice, ((int))) $Functions$_load(slice sc_0) inline {
    var v'value = sc_0~load_int(257);
    return (sc_0, (v'value));
}

(int) $Functions$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Functions$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $Functions$_contract_init();
    }
}

() $Functions$_contract_store((int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Functions$_store(b, v);
    set_data(b.end_cell());
}