import { ASTExpression, ASTInitOf, ASTLvalueRef } from '../grammar/ast';
import { CompilerContext } from "../context";
import { TypeRef } from "./types";
import { StatementContext } from "./resolveStatements";
export declare function getExpType(ctx: CompilerContext, exp: ASTExpression): TypeRef;
export declare function resolveInitOf(ast: ASTInitOf, sctx: StatementContext, ctx: CompilerContext): CompilerContext;
export declare function resolveLValueRef(path: ASTLvalueRef[], sctx: StatementContext, ctx: CompilerContext): CompilerContext;
export declare function resolveExpression(exp: ASTExpression, sctx: StatementContext, ctx: CompilerContext): CompilerContext;
export declare function getAllExpressionTypes(ctx: CompilerContext): [string, string][];
