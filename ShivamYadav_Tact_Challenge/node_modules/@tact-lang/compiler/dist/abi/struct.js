"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StructFunctions = void 0;
const ops_1 = require("../generator/writers/ops");
const writeExpression_1 = require("../generator/writers/writeExpression");
const ast_1 = require("../grammar/ast");
const resolveDescriptors_1 = require("../types/resolveDescriptors");
exports.StructFunctions = {
    toCell: {
        name: 'toCell',
        resolve: (ctx, args, ref) => {
            if (args.length !== 1) {
                (0, ast_1.throwError)('toCell() expects no arguments', ref);
            }
            if (args[0].kind !== 'ref') {
                (0, ast_1.throwError)('toCell() is implemented only a struct type', ref);
            }
            let tp = (0, resolveDescriptors_1.getType)(ctx, args[0].name);
            if (tp.kind !== 'struct') {
                (0, ast_1.throwError)('toCell() is implemented only a struct type', ref);
            }
            return { kind: 'ref', name: 'Cell', optional: false };
        },
        generate: (ctx, args, resolved, ref) => {
            if (resolved.length !== 1) {
                (0, ast_1.throwError)('toCell() expects no arguments', ref);
            }
            if (args[0].kind !== 'ref') {
                (0, ast_1.throwError)('toCell() is implemented only a struct type', ref);
            }
            return `${ops_1.ops.writerCell(args[0].name, ctx)}(${resolved.map((v) => (0, writeExpression_1.writeExpression)(v, ctx)).join(', ')})`;
        }
    }
};
