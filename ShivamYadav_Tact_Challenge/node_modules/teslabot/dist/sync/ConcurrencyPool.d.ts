export interface ConcurrencyPool {
    run<T>(src: () => Promise<T>): Promise<T>;
}
export declare const UnboundedConcurrencyPool: ConcurrencyPool;
export declare class BoundedConcurrencyPool implements ConcurrencyPool {
    #private;
    private concurrencyFactor;
    private pending;
    constructor(concurrencyFactor: number | (() => number));
    run<T>(src: () => Promise<T>): Promise<T>;
    get inFlight(): number;
    get inQueue(): number;
}
