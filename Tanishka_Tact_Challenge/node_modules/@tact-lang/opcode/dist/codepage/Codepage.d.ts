import { Cell, Slice } from 'ton-core';
import { OpCode } from './opcodes.gen';
export type Arg = string | number | boolean | Cell;
export type Op = OpCode;
type OpResolver = ((slice: Slice, cell: Cell) => Op) | Op;
export declare class Codepage {
    private readonly _trie;
    insertHex(hex: string, len: number, op: OpResolver): void;
    insertBin(bin: string, op: OpResolver): void;
    getOp(bitPrefix: string): OpResolver | null;
    find(prefix: string, maxOccurencies?: number): string[];
}
export {};
