"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeReport = void 0;
const resolveDescriptors_1 = require("../types/resolveDescriptors");
const Writer_1 = require("../utils/Writer");
function writeReport(ctx, pkg) {
    let w = new Writer_1.Writer();
    let abi = JSON.parse(pkg.abi);
    w.write(`
        # TACT Compilation Report
        Contract: ${pkg.name}
        BOC Size: ${Buffer.from(pkg.code, 'base64').length} bytes
    `);
    w.append();
    // Types
    w.write(`# Types`);
    w.write('Total Types: ' + abi.types.length);
    w.append();
    for (let t of abi.types) {
        let tt = (0, resolveDescriptors_1.getType)(ctx, t.name);
        w.write(`## ${t.name}`);
        w.write(`TLB: \`${tt.tlb}\``);
        w.write(`Signature: \`${tt.signature}\``);
        w.append();
    }
    // Get methods
    w.write(`# Get Methods`);
    w.write('Total Get Methods: ' + abi.getters.length);
    w.append();
    for (let t of abi.getters) {
        w.write(`## ${t.name}`);
        for (let arg of t.arguments) {
            w.write(`Argument: ${arg.name}`);
        }
        w.append();
    }
    // Error Codes
    w.write(`# Error Codes`);
    for (let t in abi.errors) {
        w.write(`${t}: ${abi.errors[parseInt(t, 10)].message}`);
    }
    return w.end();
}
exports.writeReport = writeReport;
