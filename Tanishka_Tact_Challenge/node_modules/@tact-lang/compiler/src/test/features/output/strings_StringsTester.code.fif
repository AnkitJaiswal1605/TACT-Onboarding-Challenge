PROGRAM{
  DECLPROC __tact_verify_address
  DECLPROC __tact_string_builder_start
  DECLPROC __tact_string_builder_start_comment
  DECLPROC __tact_string_builder_start_string
  DECLPROC __tact_string_builder_end
  DECLPROC __tact_string_builder_end_slice
  DECLPROC __tact_string_builder_append
  DECLPROC __tact_int_to_string
  DECLPROC __tact_float_to_string
  DECLPROC $StringsTester$_contract_init
  DECLPROC $StringsTester$_contract_load
  DECLPROC $StringsTester$_contract_store
  DECLPROC $Builder$_fun_asSlice
  DECLPROC $Slice$_fun_fromBase64
  DECLPROC $String$_fun_fromBase64
  DECLPROC $StringsTester$_fun_constantString
  DECLPROC $StringsTester$_fun_constantStringUnicode
  DECLPROC $StringsTester$_fun_constantStringUnicodeLong
  DECLPROC $StringsTester$_fun_dynamicStringCell
  DECLPROC $StringsTester$_fun_dynamicCommentCell
  DECLPROC $StringsTester$_fun_dynamicCommentCellLarge
  DECLPROC $StringsTester$_fun_dynamicCommentStringLarge
  DECLPROC $StringsTester$_fun_stringWithNumber
  DECLPROC $StringsTester$_fun_stringWithNegativeNumber
  DECLPROC $StringsTester$_fun_stringWithLargeNumber
  DECLPROC $StringsTester$_fun_stringWithFloat
  DECLPROC $StringsTester$_fun_base64
  DECLPROC $StringsTester$_fun_processBase64
  DECLPROC %$StringsTester$_internal_empty
  93932 DECLMETHOD %constantString
  94939 DECLMETHOD %constantStringUnicode
  104680 DECLMETHOD %constantStringUnicodeLong
  122225 DECLMETHOD %dynamicStringCell
  122531 DECLMETHOD %dynamicCommentCell
  74771 DECLMETHOD %dynamicCommentCellLarge
  74191 DECLMETHOD %dynamicCommentStringLarge
  68752 DECLMETHOD %stringWithNumber
  82914 DECLMETHOD %stringWithNegativeNumber
  94811 DECLMETHOD %stringWithLargeNumber
  80064 DECLMETHOD %stringWithFloat
  71427 DECLMETHOD %base64
  128362 DECLMETHOD %processBase64
  113617 DECLMETHOD supported_interfaces
  121275 DECLMETHOD get_abi_ipfs
  115390 DECLMETHOD lazy_deployment_completed
  DECLPROC $StringsTester$_contract_router_internal
  DECLPROC recv_internal
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_context_sys
  DECLGLOBVAR __tact_randomized
  __tact_verify_address PROCINLINE:<{
    DUP
    SBITS
    267 PUSHINT
    EQUAL
    136 THROWIFNOT
    DUP
    11 PLDU
    DUP
    1279 PUSHINT
    EQUAL
    137 THROWIF
    10 PUSHPOW2
    EQUAL
    136 THROWIFNOT
  }>
  __tact_string_builder_start PROCINLINE:<{
    NIL
    SWAP
    TPUSH
    PUSHNULL
    TPUSH
  }>
  __tact_string_builder_start_comment PROCINLINE:<{
    NEWC
    0 PUSHINT
    SWAP
    32 STU
    __tact_string_builder_start INLINECALLDICT
  }>
  __tact_string_builder_start_string PROCINLINE:<{
    NEWC
    __tact_string_builder_start INLINECALLDICT
  }>
  __tact_string_builder_end PROCINLINE:<{
    UNCONS
    SWAP
    ENDC
    WHILE:<{
      OVER
      ISNULL
      NOT
    }>DO<{
      SWAP
      UNCONS
      -ROT
      STREF
      ENDC
    }>
    NIP
  }>
  __tact_string_builder_end_slice PROCINLINE:<{
    __tact_string_builder_end INLINECALLDICT
    CTOS
  }>
  __tact_string_builder_append PROCREF:<{
    DUP
    SREFS
    OVER
    SBITS
    WHILE:<{
      DUP
      0 GTINT
      s2 PUSH
      0 GTINT
      OR
    }>DO<{
      s0 s3 XCHG
      UNCONS
      127 PUSHINT
      s2 PUSH
      BBITS
      3 RSHIFT#
      SUB
      s0 s5 XCHG
      3 RSHIFT#
      s5 s5 XCPU
      MIN
      DUP
      0 GTINT
      IF:<{
        DUP
        3 LSHIFT#
        s1 s5 XCHG
        LDSLICEX
        s3 s3 XCHG2
        STSLICER
        s0 s1 s4 XCHG3
      }>
      -ROT
      CONS
      s4 s1 PUSH2
      SUB
      0 GTINT
      IF:<{
        NEWC
        SWAP
        CONS
        s4 s4 XCHG2
        SUB
        3 LSHIFT#
      }>ELSE<{
        NIP
        s3 POP
        0 GTINT
        IF:<{
          LDREF
          DROP
          CTOS
          DUP
          SREFS
          OVER
          SBITS
        }>ELSE<{
          0 PUSHINT
          DUP
        }>
      }>
    }>
    3 BLKDROP
  }>
  __tact_int_to_string PROCREF:<{
    NEWC
    OVER
    0 LESSINT
    IF:<{
      45 PUSHINT
      SWAP
      8 STU
      SWAP
      NEGATE
      SWAP
    }>
    OVER
    1000000000000000000000000000000 PUSHINTX
    LESS
    IF:<{
      0 PUSHINT
      DUP
      1 PUSHINT
      UNTIL:<{
        s0 s4 XCHG
        10 PUSHINT
        DIVMOD
        48 ADDCONST
        s5 PUSH
        MUL
        s1 s2 XCHG
        ADD
        s0 s4 XCHG
        8 LSHIFT#
        s0 s2 XCHG
        INC
        OVER
        0 EQINT
        s5 s3 s0 XCHG3
      }>
      DROP
      s3 POP
      3 LSHIFT#
      STUX
    }>ELSE<{
      NIL
      0 PUSHINT
      UNTIL:<{
        s3 PUSH
        10 PUSHINT
        MOD
        s1 s2 XCHG
        TPUSH
        SWAP
        INC
        s0 s3 XCHG
        10 PUSHINT
        DIV
        DUP
        0 EQINT
        s1 s4 XCHG
      }>
      s3 POP
      s2 PUSH
      DEC
      s0 s3 XCHG
      REPEAT:<{
        s0 s2 PUSH2
        INDEXVAR
        48 ADDCONST
        ROT
        8 STU
        s0 s2 XCHG
        DEC
        -ROT
      }>
      DROP
      NIP
    }>
    ENDC
    CTOS
  }>
  __tact_float_to_string PROCREF:<{
    DUP
    1 LESSINT
    OVER
    77 GTINT
    OR
    134 THROWIF
    NEWC
    s2 PUSH
    0 LESSINT
    IF:<{
      45 PUSHINT
      SWAP
      8 STU
      s0 s2 XCHG
      NEGATE
      s0 s2 XCHG
    }>
    TRUE
    0 PUSHINT
    NIL
    s0 s4 XCHG
    REPEAT:<{
      s0 s4 XCHG
      10 PUSHINT
      DIVMOD
      DUP
      0 EQINT
      s3 s(-1) PUXC
      AND
      NOT
      IF:<{
        FALSE
        s3 POP
        48 ADDCONST
        s1 s4 XCHG
        TPUSH
        s0 s4 XCHG
        INC
        s0 s4 XCHG
        s0 s3 XCHG
      }>ELSE<{
        DROP
      }>
      s0 s4 XCHG
    }>
    SWAP
    NOT
    IF:<{
      s0 s2 XCHG
      46 PUSHINT
      TPUSH
      s0 s2 XCHG
      INC
    }>
    UNTIL:<{
      s0 s3 XCHG
      10 PUSHINT
      DIVMOD
      48 ADDCONST
      s1 s3 XCHG
      TPUSH
      s0 s3 XCHG
      INC
      s2 PUSH
      0 EQINT
      s3 s4 XCHG
    }>
    s3 POP
    s2 PUSH
    DEC
    s0 s3 XCHG
    REPEAT:<{
      s1 s2 PUSH2
      INDEXVAR
      SWAP
      8 STU
      s0 s2 XCHG
      DEC
      s0 s2 XCHG
    }>
    2 1 BLKDROP2
    ENDC
    CTOS
  }>
  $StringsTester$_contract_init PROCREF:<{
    PUSHNULL
  }>
  $StringsTester$_contract_load PROCREF:<{
    c4 PUSH
    CTOS
    LDREF
    SWAP
    __tact_context_sys SETGLOB
    1 LDI
    DROP
    IFJMP:<{
      PUSHNULL
    }>
    MYADDR
    11 PLDU
    10 PUSHPOW2
    EQUAL
    137 THROWIFNOT
    $StringsTester$_contract_init INLINECALLDICT
  }>
  $StringsTester$_contract_store PROCINLINE:<{
    DROP
    NEWC
    __tact_context_sys GETGLOB
    SWAP
    STREF
    TRUE
    SWAP
    1 STI
    ENDC
    c4 POP
  }>
  $Builder$_fun_asSlice PROCINLINE:<{
    ENDC
    CTOS
  }>
  $Slice$_fun_fromBase64 PROCREF:<{
    DUP
    SBITS
    3 RSHIFT#
    NEWC
    SWAP
    REPEAT:<{
      SWAP
      8 LDU
      OVER
      64 GTINT
      IF:<{
        OVER
        91 LESSINT
      }>ELSE<{
        FALSE
      }>
      IF:<{
        SWAP
        -65 ADDCONST
        ROT
        6 STU
      }>ELSE<{
        OVER
        96 GTINT
        IF:<{
          OVER
          123 LESSINT
        }>ELSE<{
          FALSE
        }>
        IF:<{
          SWAP
          -71 ADDCONST
          ROT
          6 STU
        }>ELSE<{
          OVER
          47 GTINT
          IF:<{
            OVER
            58 LESSINT
          }>ELSE<{
            FALSE
          }>
          IF:<{
            SWAP
            4 ADDCONST
            ROT
            6 STU
          }>ELSE<{
            OVER
            45 EQINT
            IF:<{
              TRUE
            }>ELSE<{
              OVER
              43 EQINT
            }>
            IF:<{
              62 PUSHINT
              s2 POP
              s0 s2 XCHG
              6 STU
            }>ELSE<{
              OVER
              95 EQINT
              IF:<{
                TRUE
              }>ELSE<{
                OVER
                47 EQINT
              }>
              IF:<{
                63 PUSHINT
                s2 POP
                s0 s2 XCHG
                6 STU
              }>ELSE<{
                SWAP
                61 EQINT
                IFNOT:<{
                  134 THROW
                }>
                SWAP
              }>
            }>
          }>
        }>
      }>
    }>
    NIP
    DUP
    BBITS
    DUP
    3 MODPOW2#
    DUP
    0 NEQINT
    IFJMP:<{
      s0 s2 XCHG
      $Builder$_fun_asSlice INLINECALLDICT
      s0 s2 XCHG
      SUB
      LDSLICEX
      DROP
    }>
    2DROP
    $Builder$_fun_asSlice INLINECALLDICT
  }>
  $String$_fun_fromBase64 PROCINLINE:<{
    $Slice$_fun_fromBase64 INLINECALLDICT
  }>
  $StringsTester$_fun_constantString PROCREF:<{
    B{b5ee9c7241010101000d0000167465737420737472696e67ee608f50} B>boc <s PUSHSLICE
  }>
  $StringsTester$_fun_constantStringUnicode PROCREF:<{
    B{b5ee9c7241010101001a000030d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d8d539ad} B>boc <s PUSHSLICE
  }>
  $StringsTester$_fun_constantStringUnicodeLong PROCREF:<{
    B{b5ee9c72410206010002fa0001fed0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f918020d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b80101fed0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d182200201fed0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d180200301fef09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd10401fe80d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b50500dcd18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0918e6a} B>boc <s PUSHSLICE
  }>
  $StringsTester$_fun_dynamicStringCell PROCREF:<{
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101000800000c48656c6c6f21a44219b3} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end INLINECALLDICT
  }>
  $StringsTester$_fun_dynamicCommentCell PROCREF:<{
    __tact_string_builder_start_comment INLINECALLDICT
    B{b5ee9c7241010101001c000034536f6d657468696e6720736f6d657468696e6720776f726c64212a90ca7f} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end INLINECALLDICT
  }>
  $StringsTester$_fun_dynamicCommentCellLarge PROCREF:<{
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101000800000c48656c6c6f21a44219b3} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    B{b5ee9c72410206010002fa0001fed0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f918020d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b80101fed0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d182200201fed0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d180200301fef09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd10401fe80d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b50500dcd18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0918e6a} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end INLINECALLDICT
  }>
  $StringsTester$_fun_dynamicCommentStringLarge PROCREF:<{
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101000800000c48656c6c6f21a44219b3} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    B{b5ee9c72410206010002fa0001fed0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f918020d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b80101fed0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d182200201fed0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d180200301fef09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd10401fe80d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b50500dcd18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0bfd180d0b8d0b2d0b5d18220d0bcd0b8d18020f09f9180d0918e6a} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end_slice INLINECALLDICT
  }>
  $StringsTester$_fun_stringWithNumber PROCREF:<{
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101001700002a48656c6c6f2c20796f75722062616c616e63653a201d628127} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    123 PUSHINT
    __tact_int_to_string INLINECALLDICT
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end_slice INLINECALLDICT
  }>
  $StringsTester$_fun_stringWithNegativeNumber PROCREF:<{
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101001700002a48656c6c6f2c20796f75722062616c616e63653a201d628127} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    -123 PUSHINT
    __tact_int_to_string INLINECALLDICT
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end_slice INLINECALLDICT
  }>
  $StringsTester$_fun_stringWithLargeNumber PROCREF:<{
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101001700002a48656c6c6f2c20796f75722062616c616e63653a201d628127} B>boc <s PUSHSLICE
    __tact_string_builder_append INLINECALLDICT
    1000000000000000000000000000000000000000000000000000000000000 PUSHINTX
    __tact_int_to_string INLINECALLDICT
    __tact_string_builder_append INLINECALLDICT
    __tact_string_builder_end_slice INLINECALLDICT
  }>
  $StringsTester$_fun_stringWithFloat PROCREF:<{
    95 PUSHINT
    1 PUSHINT
    __tact_float_to_string INLINECALLDICT
  }>
  $StringsTester$_fun_base64 PROCREF:<{
    B{b5ee9c72410101010026000048545746756553426f5957356b637942745957746c494778705a32683049486476636d7375ff762436} B>boc <s PUSHSLICE
    $String$_fun_fromBase64 INLINECALLDICT
  }>
  $StringsTester$_fun_processBase64 PROCREF:<{
    $String$_fun_fromBase64 INLINECALLDICT
  }>
  %$StringsTester$_internal_empty PROCINLINE:<{
  }>
  %constantString PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_constantString INLINECALLDICT
    NIP
  }>
  %constantStringUnicode PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_constantStringUnicode INLINECALLDICT
    NIP
  }>
  %constantStringUnicodeLong PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_constantStringUnicodeLong INLINECALLDICT
    NIP
  }>
  %dynamicStringCell PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_dynamicStringCell INLINECALLDICT
    NIP
  }>
  %dynamicCommentCell PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_dynamicCommentCell INLINECALLDICT
    NIP
  }>
  %dynamicCommentCellLarge PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_dynamicCommentCellLarge INLINECALLDICT
    NIP
  }>
  %dynamicCommentStringLarge PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_dynamicCommentStringLarge INLINECALLDICT
    NIP
  }>
  %stringWithNumber PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_stringWithNumber INLINECALLDICT
    NIP
  }>
  %stringWithNegativeNumber PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_stringWithNegativeNumber INLINECALLDICT
    NIP
  }>
  %stringWithLargeNumber PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_stringWithLargeNumber INLINECALLDICT
    NIP
  }>
  %stringWithFloat PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_stringWithFloat INLINECALLDICT
    NIP
  }>
  %base64 PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    $StringsTester$_fun_base64 INLINECALLDICT
    NIP
  }>
  %processBase64 PROC:<{
    $StringsTester$_contract_load INLINECALLDICT
    SWAP
    $StringsTester$_fun_processBase64 INLINECALLDICT
    NIP
  }>
  supported_interfaces PROC:<{
    123515602279859691144772641439386770278 PUSHINT
    209801025412363888721030803524359905849 PUSHINT
    42980537499636128163026532310500881091 PUSHINT
    36993126140238121407019133875791708966 PUSHINT
    209474421377847335869795010607481022628 PUSHINT
  }>
  get_abi_ipfs PROC:<{
    x{697066733a2f2f516d62346e695769384165784e51653633767a35546f546f684555377568336b47736d5a436b6472505241456d38} PUSHSLICE
  }>
  lazy_deployment_completed PROC:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
  }>
  $StringsTester$_contract_router_internal PROCREF:<{
    SWAP
    IFJMP:<{
      DROP
      TRUE
    }>
    0 PUSHINT
    OVER
    SBITS
    31 GTINT
    IF:<{
      DROP
      DUP
      32 PLDU
    }>
    0 EQINT
    SWAP
    SBITS
    33 LESSINT
    AND
    IFJMP:<{
      %$StringsTester$_internal_empty INLINECALLDICT
      TRUE
    }>
    FALSE
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    NEGATE
    SWAP
    LDMSGADDR
    SWAP
    __tact_verify_address INLINECALLDICT
    s0 s4 s2 PUXCPU
    s0 s3 XCHG
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $StringsTester$_contract_load INLINECALLDICT
    -ROT
    $StringsTester$_contract_router_internal INLINECALLDICT
    130 THROWIFNOT
    $StringsTester$_contract_store INLINECALLDICT
  }>
}END>c
