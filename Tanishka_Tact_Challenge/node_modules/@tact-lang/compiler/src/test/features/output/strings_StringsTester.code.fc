#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "strings_StringsTester.headers.fc";
#include "strings_StringsTester.stdlib.fc";
#include "strings_StringsTester.constants.fc";
#include "strings_StringsTester.storage.fc";

;;
;; Contract StringsTester functions
;;

tuple $StringsTester$_contract_init() impure inline_ref {
    tuple $self = null();
    return $self;
}

(tuple, slice) $StringsTester$_fun_constantString(tuple $self) impure inline_ref {
    var ($self) = $self;
    return ($self, __gen_slice_string_74d626e0f3941e966793bdd5fcf327bb9bff00847b32ebc108c9133956147c7a());
}

(tuple, slice) $StringsTester$_fun_constantStringUnicode(tuple $self) impure inline_ref {
    var ($self) = $self;
    return ($self, __gen_slice_string_710059deca558715c18495640cfb369b538848c2f8fb3b58a43d7acb2d7d7c4b());
}

(tuple, slice) $StringsTester$_fun_constantStringUnicodeLong(tuple $self) impure inline_ref {
    var ($self) = $self;
    return ($self, __gen_slice_string_96c344cdade1da5e97412fd081c6d3cd5e1735a2085600e21bc23ed337a77f60());
}

(tuple, cell) $StringsTester$_fun_dynamicStringCell(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_string();
    $b~__tact_string_builder_append(__gen_slice_string_caa2a2c6f920cdf334acf8f83ab9ef931b272c5b229f5c537570e420477e1a54());
    return ($self, __tact_string_builder_end($b));
}

(tuple, cell) $StringsTester$_fun_dynamicCommentCell(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_comment();
    $b~__tact_string_builder_append(__gen_slice_string_7e88585a2e68d61d03c94bcfa99c6306015b0327fc9e7d4adb9c5cb597ade16f());
    return ($self, __tact_string_builder_end($b));
}

(tuple, cell) $StringsTester$_fun_dynamicCommentCellLarge(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_string();
    $b~__tact_string_builder_append(__gen_slice_string_caa2a2c6f920cdf334acf8f83ab9ef931b272c5b229f5c537570e420477e1a54());
    $b~__tact_string_builder_append(__gen_slice_string_96c344cdade1da5e97412fd081c6d3cd5e1735a2085600e21bc23ed337a77f60());
    return ($self, __tact_string_builder_end($b));
}

(tuple, slice) $StringsTester$_fun_dynamicCommentStringLarge(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_string();
    $b~__tact_string_builder_append(__gen_slice_string_caa2a2c6f920cdf334acf8f83ab9ef931b272c5b229f5c537570e420477e1a54());
    $b~__tact_string_builder_append(__gen_slice_string_96c344cdade1da5e97412fd081c6d3cd5e1735a2085600e21bc23ed337a77f60());
    return ($self, __tact_string_builder_end_slice($b));
}

(tuple, slice) $StringsTester$_fun_stringWithNumber(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_string();
    $b~__tact_string_builder_append(__gen_slice_string_03dd40537be2dc6a7f0dc501d655369d5bc3f46f2ef4b2badd4d288d457444e9());
    $b~__tact_string_builder_append(__tact_int_to_string(123));
    return ($self, __tact_string_builder_end_slice($b));
}

(tuple, slice) $StringsTester$_fun_stringWithNegativeNumber(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_string();
    $b~__tact_string_builder_append(__gen_slice_string_03dd40537be2dc6a7f0dc501d655369d5bc3f46f2ef4b2badd4d288d457444e9());
    $b~__tact_string_builder_append(__tact_int_to_string((- 123)));
    return ($self, __tact_string_builder_end_slice($b));
}

(tuple, slice) $StringsTester$_fun_stringWithLargeNumber(tuple $self) impure inline_ref {
    var ($self) = $self;
    tuple $b = __tact_string_builder_start_string();
    $b~__tact_string_builder_append(__gen_slice_string_03dd40537be2dc6a7f0dc501d655369d5bc3f46f2ef4b2badd4d288d457444e9());
    $b~__tact_string_builder_append(__tact_int_to_string(1000000000000000000000000000000000000000000000000000000000000));
    return ($self, __tact_string_builder_end_slice($b));
}

(tuple, slice) $StringsTester$_fun_stringWithFloat(tuple $self) impure inline_ref {
    var ($self) = $self;
    return ($self, __tact_float_to_string(95, 1));
}

(tuple, slice) $StringsTester$_fun_base64(tuple $self) impure inline_ref {
    var ($self) = $self;
    return ($self, $String$_fun_fromBase64(__gen_slice_string_2a445194828b2997d031d317e7bafe3930ebc99081602b9f4b9702f288e5dc0f()));
}

(tuple, slice) $StringsTester$_fun_processBase64(tuple $self, slice $src) impure inline_ref {
    var ($self) = $self;
    return ($self, $String$_fun_fromBase64($src));
}

;;
;; Receivers of a Contract StringsTester
;;

((tuple), ()) %$StringsTester$_internal_empty(tuple $self) impure inline {
    var $self = $self;
    return ($self, ());
}

;;
;; Get methods of a Contract StringsTester
;;

_ %constantString() method_id(93932) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_constantString();
    return res;
}

_ %constantStringUnicode() method_id(94939) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_constantStringUnicode();
    return res;
}

_ %constantStringUnicodeLong() method_id(104680) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_constantStringUnicodeLong();
    return res;
}

_ %dynamicStringCell() method_id(122225) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_dynamicStringCell();
    return res;
}

_ %dynamicCommentCell() method_id(122531) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_dynamicCommentCell();
    return res;
}

_ %dynamicCommentCellLarge() method_id(74771) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_dynamicCommentCellLarge();
    return res;
}

_ %dynamicCommentStringLarge() method_id(74191) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_dynamicCommentStringLarge();
    return res;
}

_ %stringWithNumber() method_id(68752) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_stringWithNumber();
    return res;
}

_ %stringWithNegativeNumber() method_id(82914) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_stringWithNegativeNumber();
    return res;
}

_ %stringWithLargeNumber() method_id(94811) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_stringWithLargeNumber();
    return res;
}

_ %stringWithFloat() method_id(80064) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_stringWithFloat();
    return res;
}

_ %base64() method_id(71427) {
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_base64();
    return res;
}

_ %processBase64(slice $$src) method_id(128362) {
    slice $src = $$src;
    var self = $StringsTester$_contract_load();
    var res = self~$StringsTester$_fun_processBase64($src);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://Qmb4niWi8AexNQe63vz5ToTohEU7uh3kGsmZCkdrPRAEm8";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract StringsTester
;;

(tuple, int) $StringsTester$_contract_router_internal(tuple self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$StringsTester$_internal_empty();
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $StringsTester$_contract_load();
    
    ;; Handle operation
    int handled = self~$StringsTester$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $StringsTester$_contract_store(self);
}
