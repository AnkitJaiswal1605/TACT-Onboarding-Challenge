;;
;; Type: TestMessage
;; Header: 0xdb523f9e
;; TLB: test_message#db523f9e address:address address2:Maybe address = TestMessage
;;

(slice, ((slice, slice))) $TestMessage$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3679600542);
    var v'address = sc_0~__tact_load_address();
    var v'address2 = sc_0~__tact_load_address_opt();
    return (sc_0, (v'address, v'address2));
}

(slice, slice) $TestMessage$_from_tuple(tuple v) inline {
    var (slice v'address, slice v'address2) = __tact_tuple_destroy_2(v);
    return (__tact_verify_address(v'address), null?(v'address2) ? null() : __tact_verify_address(v'address2));
}

;;
;; Type: MasterchainTester
;;

tuple $MasterchainTester$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return null();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $MasterchainTester$_contract_init();
    }
}

() $MasterchainTester$_contract_store(tuple v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    set_data(b.end_cell());
}