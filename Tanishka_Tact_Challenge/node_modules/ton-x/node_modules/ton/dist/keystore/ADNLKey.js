"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ADNLKey = void 0;
const ton_crypto_1 = require("ton-crypto");
const ADNLAddress_1 = require("../address/ADNLAddress");
const KEY_PREFIX = Buffer.from('17236849', 'hex');
class ADNLKey {
    constructor(address, keyPair) {
        this.address = address;
        this.keyPair = keyPair;
    }
    static async fromKey(src) {
        if (src.length !== 36) {
            throw Error('Invalid key');
        }
        if (!src.slice(0, 4).equals(KEY_PREFIX)) {
            throw Error('Invalid key');
        }
        const keySeed = src.slice(4);
        // Create keypair
        const keyPair = (0, ton_crypto_1.keyPairFromSeed)(keySeed);
        // Create address
        const address = await (0, ton_crypto_1.sha256)(Buffer.concat([Buffer.from([0xC6, 0xB4, 0x13, 0x48]), keyPair.publicKey]));
        return new ADNLKey(new ADNLAddress_1.ADNLAddress(address), keyPair);
    }
}
exports.ADNLKey = ADNLKey;
