"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createWalletTransferV3 = exports.createWalletTransferV2 = exports.createWalletTransferV1 = void 0;
const ton_crypto_1 = require("ton-crypto");
const __1 = require("../..");
const WalletV1SigningMessage_1 = require("./WalletV1SigningMessage");
const WalletV2SigningMessage_1 = require("./WalletV2SigningMessage");
const WalletV3SigningMessage_1 = require("./WalletV3SigningMessage");
function createWalletTransferV1(args) {
    let signingMessage = new WalletV1SigningMessage_1.WalletV1SigningMessage({
        seqno: args.seqno,
        sendMode: args.sendMode,
        order: args.order
    });
    // Sign message
    const cell = new __1.Cell();
    signingMessage.writeTo(cell);
    let signature = (0, ton_crypto_1.sign)(cell.hash(), args.secretKey);
    // Body
    const body = new __1.Cell();
    body.bits.writeBuffer(signature);
    signingMessage.writeTo(body);
    return body;
}
exports.createWalletTransferV1 = createWalletTransferV1;
function createWalletTransferV2(args) {
    let signingMessage = new WalletV2SigningMessage_1.WalletV2SigningMessage({
        seqno: args.seqno,
        sendMode: args.sendMode,
        order: args.order,
        timeout: args.timeout
    });
    // Sign message
    const cell = new __1.Cell();
    signingMessage.writeTo(cell);
    let signature = (0, ton_crypto_1.sign)(cell.hash(), args.secretKey);
    // Body
    const body = new __1.Cell();
    body.bits.writeBuffer(signature);
    signingMessage.writeTo(body);
    return body;
}
exports.createWalletTransferV2 = createWalletTransferV2;
function createWalletTransferV3(args) {
    let signingMessage = new WalletV3SigningMessage_1.WalletV3SigningMessage({
        timeout: args.timeout,
        walletId: args.walletId,
        seqno: args.seqno,
        sendMode: args.sendMode,
        order: args.order
    });
    // Sign message
    const cell = new __1.Cell();
    signingMessage.writeTo(cell);
    let signature = (0, ton_crypto_1.sign)(cell.hash(), args.secretKey);
    // Body
    const body = new __1.Cell();
    body.bits.writeBuffer(signature);
    signingMessage.writeTo(body);
    return body;
}
exports.createWalletTransferV3 = createWalletTransferV3;
