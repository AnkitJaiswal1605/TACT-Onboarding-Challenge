PROGRAM{
  DECLPROC __tact_verify_address
  DECLPROC __tact_store_address
  DECLPROC __tact_my_balance
  DECLPROC __tact_not_null
  DECLPROC __tact_context_get
  DECLPROC __tact_context_get_sender
  DECLPROC __tact_store_bool
  DECLPROC __tact_slice_eq_bits
  DECLPROC __tact_slice_eq_bits_nullable_one
  DECLPROC __tact_slice_eq_bits_nullable
  DECLPROC __tact_int_eq_nullable_one
  DECLPROC __tact_int_neq_nullable_one
  DECLPROC __tact_int_eq_nullable
  DECLPROC __tact_int_neq_nullable
  DECLPROC __tact_cell_eq
  DECLPROC __tact_cell_neq
  DECLPROC __tact_cell_eq_nullable_one
  DECLPROC __tact_cell_neq_nullable_one
  DECLPROC __tact_cell_eq_nullable
  DECLPROC __tact_cell_neq_nullable
  DECLPROC $Deploy$_load
  DECLPROC $DeployOk$_store
  DECLPROC $DeployOk$_store_cell
  DECLPROC $StateInit$_not_null
  DECLPROC $MathTester$_contract_init
  DECLPROC $MathTester$_contract_load
  DECLPROC $MathTester$_contract_store
  DECLPROC $global_send
  DECLPROC $MathTester$_fun_add
  DECLPROC $MathTester$_fun_sub
  DECLPROC $MathTester$_fun_mul
  DECLPROC $MathTester$_fun_div
  DECLPROC $MathTester$_fun_mod
  DECLPROC $MathTester$_fun_shr
  DECLPROC $MathTester$_fun_shl
  DECLPROC $MathTester$_fun_and
  DECLPROC $MathTester$_fun_or
  DECLPROC $MathTester$_fun_compare1
  DECLPROC $MathTester$_fun_compare2
  DECLPROC $MathTester$_fun_compare3
  DECLPROC $MathTester$_fun_compare4
  DECLPROC $MathTester$_fun_compare5
  DECLPROC $MathTester$_fun_compare6
  DECLPROC $MathTester$_fun_compare7
  DECLPROC $MathTester$_fun_compare8
  DECLPROC $MathTester$_fun_compare9
  DECLPROC $MathTester$_fun_compare10
  DECLPROC $MathTester$_fun_compare11
  DECLPROC $MathTester$_fun_compare12
  DECLPROC $MathTester$_fun_compare13
  DECLPROC $MathTester$_fun_compare14
  DECLPROC $MathTester$_fun_compare15
  DECLPROC $MathTester$_fun_compare16
  DECLPROC $MathTester$_fun_compare17
  DECLPROC $MathTester$_fun_compare18
  DECLPROC $MathTester$_fun_compare19
  DECLPROC $MathTester$_fun_compare20
  DECLPROC $MathTester$_fun_compare21
  DECLPROC $MathTester$_fun_compare22
  DECLPROC $MathTester$_fun_compare23
  DECLPROC $MathTester$_fun_compare24
  DECLPROC $MathTester$_fun_compare25
  DECLPROC $MathTester$_fun_compare26
  DECLPROC $MathTester$_fun_compare27
  DECLPROC $MathTester$_fun_compare28
  DECLPROC $MathTester$_fun_isNull1
  DECLPROC $MathTester$_fun_isNotNull1
  DECLPROC $MathTester$_fun_isNull2
  DECLPROC $MathTester$_fun_isNotNull2
  DECLPROC $MathTester$_fun_isNull3
  DECLPROC $MathTester$_fun_isNotNull3
  DECLPROC $SendParameters$_constructor_bounce_to_value_mode_body_code_data
  DECLPROC $MathTester$_fun_forward
  DECLPROC $MathTester$_fun_notify
  DECLPROC $DeployOk$_constructor_queryId
  DECLPROC $MathTester$_internal_binary_Deploy
  83863 DECLMETHOD %add
  80400 DECLMETHOD %sub
  99260 DECLMETHOD %mul
  125000 DECLMETHOD %div
  126476 DECLMETHOD %mod
  89358 DECLMETHOD %shr
  110321 DECLMETHOD %shl
  108636 DECLMETHOD %and
  83393 DECLMETHOD %or
  80704 DECLMETHOD %compare1
  68387 DECLMETHOD %compare2
  72450 DECLMETHOD %compare3
  93157 DECLMETHOD %compare4
  97220 DECLMETHOD %compare5
  84903 DECLMETHOD %compare6
  88966 DECLMETHOD %compare7
  109161 DECLMETHOD %compare8
  113224 DECLMETHOD %compare9
  127339 DECLMETHOD %compare10
  123210 DECLMETHOD %compare11
  119081 DECLMETHOD %compare12
  114952 DECLMETHOD %compare13
  111087 DECLMETHOD %compare14
  106958 DECLMETHOD %compare15
  102829 DECLMETHOD %compare16
  98700 DECLMETHOD %compare17
  94307 DECLMETHOD %compare18
  90178 DECLMETHOD %compare19
  107576 DECLMETHOD %compare20
  111641 DECLMETHOD %compare21
  99450 DECLMETHOD %compare22
  103515 DECLMETHOD %compare23
  124092 DECLMETHOD %compare24
  128157 DECLMETHOD %compare25
  115966 DECLMETHOD %compare26
  120031 DECLMETHOD %compare27
  75056 DECLMETHOD %compare28
  111973 DECLMETHOD %isNull1
  89158 DECLMETHOD %isNotNull1
  99590 DECLMETHOD %isNull2
  93221 DECLMETHOD %isNotNull2
  103719 DECLMETHOD %isNull3
  97284 DECLMETHOD %isNotNull3
  113617 DECLMETHOD supported_interfaces
  121275 DECLMETHOD get_abi_ipfs
  115390 DECLMETHOD lazy_deployment_completed
  DECLPROC $MathTester$_contract_router_internal
  DECLPROC recv_internal
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_context_sys
  DECLGLOBVAR __tact_randomized
  __tact_verify_address PROCINLINE:<{
    DUP
    SBITS
    267 PUSHINT
    EQUAL
    136 THROWIFNOT
    DUP
    11 PLDU
    DUP
    1279 PUSHINT
    EQUAL
    137 THROWIF
    10 PUSHPOW2
    EQUAL
    136 THROWIFNOT
  }>
  __tact_store_address PROCINLINE:<{
    __tact_verify_address INLINECALLDICT
    STSLICER
  }>
  __tact_my_balance PROCINLINE:<{
    BALANCE
    FIRST
  }>
  __tact_not_null PROCINLINE:<{
    DUP
    ISNULL
    128 THROWIF
  }>
  __tact_context_get PROCINLINE:<{
    __tact_context GETGLOB
    4 UNTUPLE
  }>
  __tact_context_get_sender PROCINLINE:<{
    __tact_context_sender GETGLOB
  }>
  __tact_store_bool PROCINLINE:<{
    SWAP
    1 STI
  }>
  __tact_slice_eq_bits PROCINLINE:<{
    SDEQ
  }>
  __tact_slice_eq_bits_nullable_one PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      FALSE
    }>ELSE<{
      SDEQ
    }>
  }>
  __tact_slice_eq_bits_nullable PROCINLINE:<{
    OVER
    ISNULL
    OVER
    ISNULL
    2DUP
    AND
    IF:<{
      4 BLKDROP
      TRUE
    }>ELSE<{
      SWAP
      NOT
      SWAP
      NOT
      AND
      IF:<{
        SDEQ
      }>ELSE<{
        2DROP
        FALSE
      }>
    }>
  }>
  __tact_int_eq_nullable_one PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      FALSE
    }>ELSE<{
      EQUAL
    }>
  }>
  __tact_int_neq_nullable_one PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      TRUE
    }>ELSE<{
      NEQ
    }>
  }>
  __tact_int_eq_nullable PROCINLINE:<{
    OVER
    ISNULL
    OVER
    ISNULL
    2DUP
    AND
    IF:<{
      4 BLKDROP
      TRUE
    }>ELSE<{
      SWAP
      NOT
      SWAP
      NOT
      AND
      IF:<{
        EQUAL
      }>ELSE<{
        2DROP
        FALSE
      }>
    }>
  }>
  __tact_int_neq_nullable PROCINLINE:<{
    OVER
    ISNULL
    OVER
    ISNULL
    2DUP
    AND
    IF:<{
      4 BLKDROP
      FALSE
    }>ELSE<{
      SWAP
      NOT
      SWAP
      NOT
      AND
      IF:<{
        NEQ
      }>ELSE<{
        2DROP
        TRUE
      }>
    }>
  }>
  __tact_cell_eq PROCINLINE:<{
    SWAP
    HASHCU
    SWAP
    HASHCU
    EQUAL
  }>
  __tact_cell_neq PROCINLINE:<{
    SWAP
    HASHCU
    SWAP
    HASHCU
    NEQ
  }>
  __tact_cell_eq_nullable_one PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      FALSE
    }>ELSE<{
      SWAP
      HASHCU
      SWAP
      HASHCU
      EQUAL
    }>
  }>
  __tact_cell_neq_nullable_one PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      TRUE
    }>ELSE<{
      SWAP
      HASHCU
      SWAP
      HASHCU
      NEQ
    }>
  }>
  __tact_cell_eq_nullable PROCINLINE:<{
    OVER
    ISNULL
    OVER
    ISNULL
    2DUP
    AND
    IF:<{
      4 BLKDROP
      TRUE
    }>ELSE<{
      SWAP
      NOT
      SWAP
      NOT
      AND
      IF:<{
        SWAP
        HASHCU
        SWAP
        HASHCU
        EQUAL
      }>ELSE<{
        2DROP
        FALSE
      }>
    }>
  }>
  __tact_cell_neq_nullable PROCINLINE:<{
    OVER
    ISNULL
    OVER
    ISNULL
    2DUP
    AND
    IF:<{
      4 BLKDROP
      FALSE
    }>ELSE<{
      SWAP
      NOT
      SWAP
      NOT
      AND
      IF:<{
        SWAP
        HASHCU
        SWAP
        HASHCU
        NEQ
      }>ELSE<{
        2DROP
        TRUE
      }>
    }>
  }>
  $Deploy$_load PROCINLINE:<{
    32 LDU
    SWAP
    2490013878 PUSHINT
    EQUAL
    129 THROWIFNOT
    64 LDU
    SWAP
  }>
  $DeployOk$_store PROCINLINE:<{
    2952335191 PUSHINT
    ROT
    32 STU
    64 STU
  }>
  $DeployOk$_store_cell PROCINLINE:<{
    NEWC
    SWAP
    $DeployOk$_store INLINECALLDICT
    ENDC
  }>
  $StateInit$_not_null PROCINLINE:<{
    DUP
    ISNULL
    128 THROWIF
    2 UNTUPLE
  }>
  $MathTester$_contract_init PROCREF:<{
    PUSHNULL
  }>
  $MathTester$_contract_load PROCREF:<{
    c4 PUSH
    CTOS
    LDREF
    SWAP
    __tact_context_sys SETGLOB
    1 LDI
    DROP
    IFJMP:<{
      PUSHNULL
    }>
    MYADDR
    11 PLDU
    10 PUSHPOW2
    EQUAL
    137 THROWIFNOT
    $MathTester$_contract_init INLINECALLDICT
  }>
  $MathTester$_contract_store PROCINLINE:<{
    DROP
    NEWC
    __tact_context_sys GETGLOB
    SWAP
    STREF
    TRUE
    SWAP
    1 STI
    ENDC
    c4 POP
  }>
  $global_send PROCREF:<{
    NEWC
    1 PUSHINT
    SWAP
    2 STI
    s0 s7 XCHG2
    __tact_store_bool INLINECALLDICT
    0 PUSHINT
    SWAP
    3 STI
    s0 s5 XCHG2
    __tact_store_address INLINECALLDICT
    s0 s3 XCHG2
    STGRAMS
    0 PUSHINT
    SWAP
    105 STI
    s3 PUSH
    ISNULL
    NOT
    IF:<{
      TRUE
    }>ELSE<{
      s4 PUSH
      ISNULL
      NOT
    }>
    IF:<{
      TRUE
      __tact_store_bool INLINECALLDICT
      NEWC
      FALSE
      __tact_store_bool INLINECALLDICT
      FALSE
      __tact_store_bool INLINECALLDICT
      s4 PUSH
      ISNULL
      NOT
      IF:<{
        TRUE
        __tact_store_bool INLINECALLDICT
        s0 s4 XCHG
        __tact_not_null INLINECALLDICT
        s0 s4 XCHG2
        STREF
      }>ELSE<{
        s4 POP
        s0 s3 XCHG
        FALSE
        __tact_store_bool INLINECALLDICT
      }>
      s4 PUSH
      ISNULL
      NOT
      IF:<{
        TRUE
        __tact_store_bool INLINECALLDICT
        s0 s4 XCHG
        __tact_not_null INLINECALLDICT
        s0 s4 XCHG2
        STREF
      }>ELSE<{
        s4 POP
        s0 s3 XCHG
        FALSE
        __tact_store_bool INLINECALLDICT
      }>
      FALSE
      __tact_store_bool INLINECALLDICT
      s0 s2 XCHG
      TRUE
      __tact_store_bool INLINECALLDICT
      s0 s2 XCHG
      ENDC
      ROT
      STREF
    }>ELSE<{
      s3 POP
      s3 POP
      SWAP
      FALSE
      __tact_store_bool INLINECALLDICT
    }>
    OVER
    ISNULL
    NOT
    IF:<{
      TRUE
      __tact_store_bool INLINECALLDICT
      SWAP
      __tact_not_null INLINECALLDICT
      SWAP
      STREF
    }>ELSE<{
      NIP
      FALSE
      __tact_store_bool INLINECALLDICT
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  $MathTester$_fun_add PROCREF:<{
    ADD
  }>
  $MathTester$_fun_sub PROCREF:<{
    SUB
  }>
  $MathTester$_fun_mul PROCREF:<{
    MUL
  }>
  $MathTester$_fun_div PROCREF:<{
    DIV
  }>
  $MathTester$_fun_mod PROCREF:<{
    MOD
  }>
  $MathTester$_fun_shr PROCREF:<{
    RSHIFT
  }>
  $MathTester$_fun_shl PROCREF:<{
    LSHIFT
  }>
  $MathTester$_fun_and PROCREF:<{
    AND
  }>
  $MathTester$_fun_or PROCREF:<{
    OR
  }>
  $MathTester$_fun_compare1 PROCREF:<{
    SWAP
    __tact_int_eq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare2 PROCREF:<{
    SWAP
    __tact_int_neq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare3 PROCREF:<{
    __tact_int_eq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare4 PROCREF:<{
    __tact_int_neq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare5 PROCREF:<{
    __tact_int_eq_nullable INLINECALLDICT
  }>
  $MathTester$_fun_compare6 PROCREF:<{
    __tact_int_neq_nullable INLINECALLDICT
  }>
  $MathTester$_fun_compare7 PROCREF:<{
    GREATER
  }>
  $MathTester$_fun_compare8 PROCREF:<{
    GEQ
  }>
  $MathTester$_fun_compare9 PROCREF:<{
    LESS
  }>
  $MathTester$_fun_compare10 PROCREF:<{
    LEQ
  }>
  $MathTester$_fun_compare11 PROCREF:<{
    SWAP
    __tact_slice_eq_bits INLINECALLDICT
  }>
  $MathTester$_fun_compare12 PROCREF:<{
    SWAP
    __tact_slice_eq_bits_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare13 PROCREF:<{
    __tact_slice_eq_bits_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare14 PROCREF:<{
    __tact_slice_eq_bits_nullable INLINECALLDICT
  }>
  $MathTester$_fun_compare15 PROCREF:<{
    SWAP
    __tact_slice_eq_bits INLINECALLDICT
    NOT
  }>
  $MathTester$_fun_compare16 PROCREF:<{
    SWAP
    __tact_slice_eq_bits_nullable_one INLINECALLDICT
    NOT
  }>
  $MathTester$_fun_compare17 PROCREF:<{
    __tact_slice_eq_bits_nullable_one INLINECALLDICT
    NOT
  }>
  $MathTester$_fun_compare18 PROCREF:<{
    __tact_slice_eq_bits_nullable INLINECALLDICT
    NOT
  }>
  $MathTester$_fun_compare19 PROCREF:<{
    SWAP
    __tact_cell_eq INLINECALLDICT
  }>
  $MathTester$_fun_compare20 PROCREF:<{
    SWAP
    __tact_cell_eq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare21 PROCREF:<{
    __tact_cell_eq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare22 PROCREF:<{
    __tact_cell_eq_nullable INLINECALLDICT
  }>
  $MathTester$_fun_compare23 PROCREF:<{
    SWAP
    __tact_cell_neq INLINECALLDICT
  }>
  $MathTester$_fun_compare24 PROCREF:<{
    SWAP
    __tact_cell_neq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare25 PROCREF:<{
    __tact_cell_neq_nullable_one INLINECALLDICT
  }>
  $MathTester$_fun_compare26 PROCREF:<{
    __tact_cell_neq_nullable INLINECALLDICT
  }>
  $MathTester$_fun_compare27 PROCREF:<{
    __tact_cell_eq_nullable INLINECALLDICT
  }>
  $MathTester$_fun_compare28 PROCREF:<{
    __tact_cell_neq_nullable INLINECALLDICT
  }>
  $MathTester$_fun_isNull1 PROCREF:<{
    ISNULL
  }>
  $MathTester$_fun_isNotNull1 PROCREF:<{
    ISNULL
    NOT
  }>
  $MathTester$_fun_isNull2 PROCREF:<{
    ISNULL
  }>
  $MathTester$_fun_isNotNull2 PROCREF:<{
    ISNULL
    NOT
  }>
  $MathTester$_fun_isNull3 PROCREF:<{
    ISNULL
  }>
  $MathTester$_fun_isNotNull3 PROCREF:<{
    ISNULL
    NOT
  }>
  $SendParameters$_constructor_bounce_to_value_mode_body_code_data PROCINLINE:<{
  }>
  $MathTester$_fun_forward PROCREF:<{
    PUSHNULL
    PUSHNULL
    s2 PUSH
    ISNULL
    NOT
    IF:<{
      2DROP
      $StateInit$_not_null INLINECALLDICT
      SWAP
    }>ELSE<{
      s2 POP
    }>
    s2 s4 XCHG
    0 PUSHINT
    s0 s3 XCHG
    s0 s4 XCHG
    66 PUSHINT
    s2 s3 XCHG2
    $SendParameters$_constructor_bounce_to_value_mode_body_code_data INLINECALLDICT
    $global_send INLINECALLDICT
  }>
  $MathTester$_fun_notify PROCINLINE:<{
    __tact_context_get_sender INLINECALLDICT
    SWAP
    FALSE
    PUSHNULL
    $MathTester$_fun_forward INLINECALLDICT
  }>
  $DeployOk$_constructor_queryId PROCINLINE:<{
  }>
  $MathTester$_internal_binary_Deploy PROCINLINE:<{
    $DeployOk$_constructor_queryId INLINECALLDICT
    $DeployOk$_store_cell INLINECALLDICT
    $MathTester$_fun_notify INLINECALLDICT
  }>
  %add PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_add INLINECALLDICT
    NIP
  }>
  %sub PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_sub INLINECALLDICT
    NIP
  }>
  %mul PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_mul INLINECALLDICT
    NIP
  }>
  %div PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_div INLINECALLDICT
    NIP
  }>
  %mod PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_mod INLINECALLDICT
    NIP
  }>
  %shr PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_shr INLINECALLDICT
    NIP
  }>
  %shl PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_shl INLINECALLDICT
    NIP
  }>
  %and PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_and INLINECALLDICT
    NIP
  }>
  %or PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_or INLINECALLDICT
    NIP
  }>
  %compare1 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare1 INLINECALLDICT
    NIP
  }>
  %compare2 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare2 INLINECALLDICT
    NIP
  }>
  %compare3 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare3 INLINECALLDICT
    NIP
  }>
  %compare4 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare4 INLINECALLDICT
    NIP
  }>
  %compare5 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare5 INLINECALLDICT
    NIP
  }>
  %compare6 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare6 INLINECALLDICT
    NIP
  }>
  %compare7 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare7 INLINECALLDICT
    NIP
  }>
  %compare8 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare8 INLINECALLDICT
    NIP
  }>
  %compare9 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare9 INLINECALLDICT
    NIP
  }>
  %compare10 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare10 INLINECALLDICT
    NIP
  }>
  %compare11 PROC:<{
    SWAP
    __tact_verify_address INLINECALLDICT
    SWAP
    __tact_verify_address INLINECALLDICT
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare11 INLINECALLDICT
    NIP
  }>
  %compare12 PROC:<{
    SWAP
    __tact_verify_address INLINECALLDICT
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare12 INLINECALLDICT
    NIP
  }>
  %compare13 PROC:<{
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    SWAP
    __tact_verify_address INLINECALLDICT
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare13 INLINECALLDICT
    NIP
  }>
  %compare14 PROC:<{
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare14 INLINECALLDICT
    NIP
  }>
  %compare15 PROC:<{
    SWAP
    __tact_verify_address INLINECALLDICT
    SWAP
    __tact_verify_address INLINECALLDICT
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare15 INLINECALLDICT
    NIP
  }>
  %compare16 PROC:<{
    SWAP
    __tact_verify_address INLINECALLDICT
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare16 INLINECALLDICT
    NIP
  }>
  %compare17 PROC:<{
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    SWAP
    __tact_verify_address INLINECALLDICT
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare17 INLINECALLDICT
    NIP
  }>
  %compare18 PROC:<{
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    OVER
    ISNULL
    IF:<{
      NIP
      PUSHNULL
    }>ELSE<{
      SWAP
      __tact_verify_address INLINECALLDICT
    }>
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare18 INLINECALLDICT
    NIP
  }>
  %compare19 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare19 INLINECALLDICT
    NIP
  }>
  %compare20 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare20 INLINECALLDICT
    NIP
  }>
  %compare21 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare21 INLINECALLDICT
    NIP
  }>
  %compare22 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare22 INLINECALLDICT
    NIP
  }>
  %compare23 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare23 INLINECALLDICT
    NIP
  }>
  %compare24 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare24 INLINECALLDICT
    NIP
  }>
  %compare25 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare25 INLINECALLDICT
    NIP
  }>
  %compare26 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare26 INLINECALLDICT
    NIP
  }>
  %compare27 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare27 INLINECALLDICT
    NIP
  }>
  %compare28 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_fun_compare28 INLINECALLDICT
    NIP
  }>
  %isNull1 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    SWAP
    $MathTester$_fun_isNull1 INLINECALLDICT
    NIP
  }>
  %isNotNull1 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    SWAP
    $MathTester$_fun_isNotNull1 INLINECALLDICT
    NIP
  }>
  %isNull2 PROC:<{
    DUP
    ISNULL
    IF:<{
      DROP
      PUSHNULL
    }>ELSE<{
      __tact_verify_address INLINECALLDICT
    }>
    $MathTester$_contract_load INLINECALLDICT
    SWAP
    $MathTester$_fun_isNull2 INLINECALLDICT
    NIP
  }>
  %isNotNull2 PROC:<{
    DUP
    ISNULL
    IF:<{
      DROP
      PUSHNULL
    }>ELSE<{
      __tact_verify_address INLINECALLDICT
    }>
    $MathTester$_contract_load INLINECALLDICT
    SWAP
    $MathTester$_fun_isNotNull2 INLINECALLDICT
    NIP
  }>
  %isNull3 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    SWAP
    $MathTester$_fun_isNull3 INLINECALLDICT
    NIP
  }>
  %isNotNull3 PROC:<{
    $MathTester$_contract_load INLINECALLDICT
    SWAP
    $MathTester$_fun_isNotNull3 INLINECALLDICT
    NIP
  }>
  supported_interfaces PROC:<{
    123515602279859691144772641439386770278 PUSHINT
    209801025412363888721030803524359905849 PUSHINT
    42980537499636128163026532310500881091 PUSHINT
    36993126140238121407019133875791708966 PUSHINT
    209474421377847335869795010607481022628 PUSHINT
  }>
  get_abi_ipfs PROC:<{
    x{697066733a2f2f516d514571415837596f73704d3343774259647431666b454444716e6a79733546744a48785765615a636d4d4136} PUSHSLICE
  }>
  lazy_deployment_completed PROC:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
  }>
  $MathTester$_contract_router_internal PROCREF:<{
    SWAP
    IFJMP:<{
      DROP
      TRUE
    }>
    0 PUSHINT
    OVER
    SBITS
    31 GTINT
    IF:<{
      DROP
      DUP
      32 PLDU
    }>
    2490013878 PUSHINT
    EQUAL
    IFJMP:<{
      $Deploy$_load INLINECALLDICT
      NIP
      $MathTester$_internal_binary_Deploy INLINECALLDICT
      TRUE
    }>
    DROP
    FALSE
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    NEGATE
    SWAP
    LDMSGADDR
    SWAP
    __tact_verify_address INLINECALLDICT
    s0 s4 s2 PUXCPU
    s0 s3 XCHG
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $MathTester$_contract_load INLINECALLDICT
    -ROT
    $MathTester$_contract_router_internal INLINECALLDICT
    130 THROWIFNOT
    $MathTester$_contract_store INLINECALLDICT
  }>
}END>c
