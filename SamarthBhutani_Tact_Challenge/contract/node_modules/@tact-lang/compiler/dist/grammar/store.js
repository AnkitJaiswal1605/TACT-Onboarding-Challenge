"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openContext = exports.getRawAST = void 0;
const context_1 = require("../context");
const grammar_1 = require("./grammar");
const store = (0, context_1.createContextStore)();
function getRawAST(ctx) {
    let r = store.get(ctx, 'types');
    if (!r) {
        throw Error('No AST found in context');
    }
    return r;
}
exports.getRawAST = getRawAST;
function openContext(ctx, sources, funcSources) {
    let asts = sources.map(source => (0, grammar_1.parse)(source.code, source.path, source.origin));
    let types = [];
    let functions = [];
    let constants = [];
    for (let a of asts) {
        for (let e of a.entries) {
            if (e.kind === 'def_struct' || e.kind === 'def_contract' || e.kind === 'def_trait' || e.kind === 'primitive') {
                types.push(e);
            }
            else if (e.kind === 'def_function' || e.kind === 'def_native_function') {
                functions.push(e);
            }
            else if (e.kind === 'def_constant') {
                constants.push(e);
            }
        }
    }
    ctx = store.set(ctx, 'types', { sources, funcSources, functions, constants, types });
    return ctx;
}
exports.openContext = openContext;
