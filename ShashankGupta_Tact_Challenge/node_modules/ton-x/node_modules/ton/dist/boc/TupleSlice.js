"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TupleSlice = void 0;
const bn_js_1 = require("bn.js");
const bnToAddress_1 = require("../utils/bnToAddress");
const Cell_1 = require("./Cell");
class TupleSlice {
    constructor(items) {
        this.items = [...items];
    }
    get remaining() {
        return this.items.length;
    }
    readNumber() {
        if (this.items[0][0] !== 'num') {
            throw Error('Not a number');
        }
        let res = parseInt(this.items[0][1]);
        this.items.splice(0, 1);
        return res;
    }
    readBoolean() {
        if (this.items[0][0] !== 'num') {
            throw Error('Not a number');
        }
        let res = parseInt(this.items[0][1]);
        this.items.splice(0, 1);
        return res === 0 ? false : true;
    }
    readBigNumber() {
        if (this.items[0][0] !== 'num') {
            throw Error('Not a number');
        }
        let res = new bn_js_1.BN(this.items[0][1].slice(2), 'hex');
        this.items.splice(0, 1);
        return res;
    }
    readCell() {
        if (this.items[0][0] !== 'cell') {
            throw Error('Not a cell');
        }
        let res = Cell_1.Cell.fromBoc(Buffer.from(this.items[0][1].bytes, 'base64'))[0];
        this.items.splice(0, 1);
        return res;
    }
    readNumericAddress(chain) {
        if (this.items[0][0] !== 'num') {
            throw Error('Not a number');
        }
        let bn = this.readBigNumber();
        return (0, bnToAddress_1.bnToAddress)(chain, bn);
    }
}
exports.TupleSlice = TupleSlice;
