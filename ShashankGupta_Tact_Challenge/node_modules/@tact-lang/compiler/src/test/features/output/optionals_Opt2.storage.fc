;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

builder $StateInit$_store(builder build_0, (cell, cell) v) inline {
    var (v'code, v'data) = v;
    build_0 = build_0.store_ref(v'code);
    build_0 = build_0.store_ref(v'data);
    return build_0;
}

(slice, ((cell, cell))) $StateInit$_load(slice sc_0) inline {
    var v'code = sc_0~load_ref();
    var v'data = sc_0~load_ref();
    return (sc_0, (v'code, v'data));
}

;;
;; Type: Struct2
;; Header: 0xb119629a
;; TLB: struct2#b119629a v:int257 = Struct2
;;

builder $Struct2$_store(builder build_0, (int) v) inline {
    var (v'v) = v;
    build_0 = store_uint(build_0, 2971230874, 32);
    build_0 = build_0.store_int(v'v, 257);
    return build_0;
}

((int)) $Struct2$_tensor_cast((int) v) asm "NOP";

((int)) $Struct2$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'v) = __tact_tuple_destroy_1(v);
    return (vvv'v);
}

tuple $Struct2$_as_optional((int) v) inline {
    var (v'v) = v;
    return __tact_tuple_create_1(v'v);
}

((int)) $Struct2$_constructor_v(int v) inline {
    return (v);
}

;;
;; Type: OptStruct
;; TLB: _ s:Maybe Struct2{v:int257} = OptStruct
;;

((tuple)) $OptStruct$_constructor_s(tuple s) inline {
    return (s);
}

;;
;; Type: Opt2
;;

builder $Opt2$_store(builder build_0, ((cell, cell)) v) inline {
    var ((v'stateInit'code, v'stateInit'data)) = v;
    build_0 = $StateInit$_store(build_0, (v'stateInit'code, v'stateInit'data));
    return build_0;
}

(slice, (((cell, cell)))) $Opt2$_load(slice sc_0) inline {
    var v'stateInit = sc_0~$StateInit$_load();
    return (sc_0, (v'stateInit));
}

((cell, cell)) $Opt2$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Opt2$_load();
    } else {
        return $Opt2$_contract_init();
    }
}

() $Opt2$_contract_store(((cell, cell)) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Opt2$_store(b, v);
    set_data(b.end_cell());
}

;;
;; Type: Opt3
;;

builder $Opt3$init$_store(builder build_0, (tuple) v) inline {
    var (v'arg) = v;
    build_0 = ~ null?(v'arg) ? build_0.store_int(true, 1).$Struct2$_store($Struct2$_not_null(v'arg)) : build_0.store_int(false, 1);
    return build_0;
}

(cell, cell) $Opt3$_init_child(cell sys', tuple $arg) inline_ref {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: Opt3
    cell mine = __tact_dict_get_code(source, 41175);
    contracts = __tact_dict_set_code(contracts, 41175, mine);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = $Opt3$init$_store(b, ($arg));
    return (mine, b.end_cell());
}