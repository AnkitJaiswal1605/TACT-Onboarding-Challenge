;;
;; Type: Source
;; TLB: _ a:int257 b:int257 = Source
;;

builder $Source$_store(builder build_0, (int, int) v) inline {
    var (v'a, v'b) = v;
    build_0 = build_0.store_int(v'a, 257);
    build_0 = build_0.store_int(v'b, 257);
    return build_0;
}

(slice, ((int, int))) $Source$_load(slice sc_0) inline {
    var v'a = sc_0~load_int(257);
    var v'b = sc_0~load_int(257);
    return (sc_0, (v'a, v'b));
}

((int, int)) $Source$_constructor_a_b(int a, int b) inline {
    return (a, b);
}

;;
;; Type: SampleContract
;;

builder $SampleContract$_store(builder build_0, (int, int, (int, int), cell) v) inline {
    var (v'a, v'b, (v'c'a, v'c'b), v'd) = v;
    build_0 = build_0.store_int(v'a, 257);
    build_0 = build_0.store_int(v'b, 257);
    var build_1 = begin_cell();
    build_1 = $Source$_store(build_1, (v'c'a, v'c'b));
    build_1 = build_1.store_dict(v'd);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, (int, int), cell))) $SampleContract$_load(slice sc_0) inline {
    var v'a = sc_0~load_int(257);
    var v'b = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'c = sc_1~$Source$_load();
    var v'd = sc_1~load_dict();
    return (sc_0, (v'a, v'b, v'c, v'd));
}

(int, int, (int, int), cell) $SampleContract$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$SampleContract$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $SampleContract$_contract_init();
    }
}

() $SampleContract$_contract_store((int, int, (int, int), cell) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $SampleContract$_store(b, v);
    set_data(b.end_cell());
}