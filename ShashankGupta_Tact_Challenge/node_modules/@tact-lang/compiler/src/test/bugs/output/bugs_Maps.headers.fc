;;
;; Header files for Maps
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_int_slice
(cell, ()) __tact_dict_set_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_set_slice_slice
(cell, ()) __tact_dict_set_slice_slice(cell d, int kl, slice k, slice v) inline;

;; $TokenInfo$_store
builder $TokenInfo$_store(builder build_0, (slice, int) v) inline;

;; $TokenInfo$_store_cell
cell $TokenInfo$_store_cell((slice, int) v) inline;

;; $TokenInfo$_not_null
((slice, int)) $TokenInfo$_not_null(tuple v) inline;

;; $TokenInfo$_store_opt
cell $TokenInfo$_store_opt(tuple v) inline;

;; $TokenInfo$_load
(slice, ((slice, int))) $TokenInfo$_load(slice sc_0) inline;

;; $TokenInfo$_as_optional
tuple $TokenInfo$_as_optional((slice, int) v) inline;

;; $TokenInfo$_load_opt
tuple $TokenInfo$_load_opt(cell cl) inline;

;; $Replace$_load
(slice, ((cell))) $Replace$_load(slice sc_0) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Maps$_store
builder $Maps$_store(builder build_0, (cell, cell, cell, cell, cell, cell, cell, cell) v) inline;

;; $Maps$_load
(slice, ((cell, cell, cell, cell, cell, cell, cell, cell))) $Maps$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Maps$init$_load
(slice, ((cell))) $Maps$init$_load(slice sc_0) inline;

;; $Maps$_contract_init
(cell, cell, cell, cell, cell, cell, cell, cell) $Maps$_contract_init(cell $arg) impure inline_ref;

;; $Maps$_contract_load
(cell, cell, cell, cell, cell, cell, cell, cell) $Maps$_contract_load() impure inline_ref;

;; $Maps$_contract_store
() $Maps$_contract_store((cell, cell, cell, cell, cell, cell, cell, cell) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Maps$_fun_oneItem
((cell, cell, cell, cell, cell, cell, cell, cell), slice) $Maps$_fun_oneItem((cell, cell, cell, cell, cell, cell, cell, cell) $self, int $key) impure inline_ref;

;; $Maps$_fun_itemCheck
((cell, cell, cell, cell, cell, cell, cell, cell), slice) $Maps$_fun_itemCheck((cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $Maps$_fun_allItems
((cell, cell, cell, cell, cell, cell, cell, cell), cell) $Maps$_fun_allItems((cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Maps$_fun_forward
((cell, cell, cell, cell, cell, cell, cell, cell), ()) $Maps$_fun_forward((cell, cell, cell, cell, cell, cell, cell, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Maps$_fun_notify
((cell, cell, cell, cell, cell, cell, cell, cell), ()) $Maps$_fun_notify((cell, cell, cell, cell, cell, cell, cell, cell) $self, cell $body) impure inline;

;; $TokenInfo$_constructor_ticker_decimals
((slice, int)) $TokenInfo$_constructor_ticker_decimals(slice ticker, int decimals) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
