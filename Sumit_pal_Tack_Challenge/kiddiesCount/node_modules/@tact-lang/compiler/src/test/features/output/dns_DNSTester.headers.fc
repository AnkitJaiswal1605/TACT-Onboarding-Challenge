;;
;; Header files for DNSTester
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $DNSResolveResult$_to_external
(int, cell) $DNSResolveResult$_to_external(((int, cell)) v) inline;

;; $DNSTester$_contract_init
tuple $DNSTester$_contract_init() impure inline_ref;

;; $DNSTester$_contract_load
tuple $DNSTester$_contract_load() impure inline_ref;

;; $DNSTester$_contract_store
() $DNSTester$_contract_store(tuple v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_dnsExtractTopDomainLength
int $global_dnsExtractTopDomainLength(slice $subdomain) impure inline_ref;

;; $global_dnsExtractTopDomain
slice $global_dnsExtractTopDomain(slice $subdomain) impure inline_ref;

;; $DNSTester$_fun_stringToInternal
(tuple, slice) $DNSTester$_fun_stringToInternal(tuple $self, slice $src) impure inline_ref;

;; $DNSTester$_fun_internalNormalize
(tuple, slice) $DNSTester$_fun_internalNormalize(tuple $self, slice $src) impure inline_ref;

;; $DNSTester$_fun_dnsInternalVerify
(tuple, int) $DNSTester$_fun_dnsInternalVerify(tuple $self, slice $subdomain) impure inline_ref;

;; $DNSTester$_fun_dnsExtractTopDomainLength
(tuple, int) $DNSTester$_fun_dnsExtractTopDomainLength(tuple $self, slice $subdomain) impure inline_ref;

;; $DNSTester$_fun_dnsExtractTopDomain
(tuple, slice) $DNSTester$_fun_dnsExtractTopDomain(tuple $self, slice $subdomain) impure inline_ref;

;; $DNSResolveResult$_constructor_prefix_record
((int, cell)) $DNSResolveResult$_constructor_prefix_record(int prefix, cell record) inline;

;; $DNSTester$_fun_doResolveDNS
(tuple, (int, cell)) $DNSTester$_fun_doResolveDNS(tuple $self, slice $subdomain, int $category) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $DNSTester$_fun_forward
(tuple, ()) $DNSTester$_fun_forward(tuple $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $DNSTester$_fun_notify
(tuple, ()) $DNSTester$_fun_notify(tuple $self, cell $body) impure inline;

;; $DNSTester$_fun_dnsresolve
(tuple, (int, cell)) $DNSTester$_fun_dnsresolve(tuple $self, slice $subdomain, int $category) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
