#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "optionals_ContractWithOptionals.headers.fc";
#include "optionals_ContractWithOptionals.stdlib.fc";
#include "optionals_ContractWithOptionals.storage.fc";

;;
;; Contract ContractWithOptionals functions
;;

(int, int, cell, slice, tuple, tuple) $ContractWithOptionals$_contract_init(int $a, int $b, cell $c, slice $d, tuple $e, tuple $f) impure inline_ref {
    var ($e) = $e;
    var ($f) = $f;
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = (null(), null(), null(), null(), null(), null());
    $self'a = $a;
    $self'b = $b;
    $self'c = $c;
    $self'd = $d;
    $self'e = $e;
    $self'f = $f;
    return ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f);
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), (~ null?($self'a)));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), (~ null?($self'b)));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), (~ null?($self'c)));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), (~ null?($self'd)));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), (~ null?($self'e)));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_isNotNullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), (~ null?($self'f)));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_nullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'a);
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_nullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'b);
}

((int, int, cell, slice, tuple, tuple), cell) $ContractWithOptionals$_fun_nullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'c);
}

((int, int, cell, slice, tuple, tuple), slice) $ContractWithOptionals$_fun_nullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'd);
}

((int, int, cell, slice, tuple, tuple), tuple) $ContractWithOptionals$_fun_nullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'e);
}

((int, int, cell, slice, tuple, tuple), tuple) $ContractWithOptionals$_fun_nullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $self'f);
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_notNullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __tact_not_null($self'a));
}

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_fun_notNullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __tact_not_null($self'b));
}

((int, int, cell, slice, tuple, tuple), cell) $ContractWithOptionals$_fun_notNullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __tact_not_null($self'c));
}

((int, int, cell, slice, tuple, tuple), slice) $ContractWithOptionals$_fun_notNullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), __tact_not_null($self'd));
}

((int, int, cell, slice, tuple, tuple), (int, int, int, int, int)) $ContractWithOptionals$_fun_notNullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $SomeGenericStruct$_not_null($self'e));
}

((int, int, cell, slice, tuple, tuple), (int, int, cell, slice, tuple)) $ContractWithOptionals$_fun_notNullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $StructWithOptionals$_not_null($self'f));
}

((int, int, cell, slice, tuple, tuple), (int, int, int, int, int)) $ContractWithOptionals$_fun_testVariables((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    tuple $a = $SomeGenericStruct$_as_optional($SomeGenericStruct$_constructor_value1_value2_value3_value4_value5(1, 2, 3, 4, 5));
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), $SomeGenericStruct$_not_null($a));
}

;;
;; Receivers of a Contract ContractWithOptionals
;;

(((int, int, cell, slice, tuple, tuple)), ()) %$ContractWithOptionals$_internal_empty((int, int, cell, slice, tuple, tuple) $self) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

(((int, int, cell, slice, tuple, tuple)), ()) $ContractWithOptionals$_internal_binary_Update((int, int, cell, slice, tuple, tuple) $self, (int, int, cell, slice, tuple, tuple) $msg) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    var ($msg'a, $msg'b, $msg'c, $msg'd, $msg'e, $msg'f) = $msg;
    $self'a = $msg'a;
    $self'b = $msg'b;
    $self'c = $msg'c;
    $self'd = $msg'd;
    $self'e = $msg'e;
    $self'f = $msg'f;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

;;
;; Get methods of a Contract ContractWithOptionals
;;

_ %isNotNullA() method_id(74449) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_isNotNullA();
    return res;
}

_ %isNotNullB() method_id(70322) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_isNotNullB();
    return res;
}

_ %isNotNullC() method_id(66195) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_isNotNullC();
    return res;
}

_ %isNotNullD() method_id(94836) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_isNotNullD();
    return res;
}

_ %isNotNullE() method_id(90709) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_isNotNullE();
    return res;
}

_ %isNotNullF() method_id(86582) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_isNotNullF();
    return res;
}

_ %nullA() method_id(119020) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_nullA();
    return res;
}

_ %nullB() method_id(123023) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_nullB();
    return res;
}

_ %nullC() method_id(127150) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_nullC();
    return res;
}

_ %nullD() method_id(98377) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_nullD();
    return res;
}

_ %nullE() method_id(102504) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_nullE();
    return $SomeGenericStruct$_to_opt_external(res);
}

_ %nullF() method_id(106507) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_nullF();
    return $StructWithOptionals$_to_opt_external(res);
}

_ %notNullA() method_id(110911) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_notNullA();
    return res;
}

_ %notNullB() method_id(98652) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_notNullB();
    return res;
}

_ %notNullC() method_id(102781) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_notNullC();
    return res;
}

_ %notNullD() method_id(123290) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_notNullD();
    return res;
}

_ %notNullE() method_id(127419) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_notNullE();
    return $SomeGenericStruct$_to_external(res);
}

_ %notNullF() method_id(115160) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_notNullF();
    return $StructWithOptionals$_to_external(res);
}

_ %testVariables() method_id(87190) {
    var self = $ContractWithOptionals$_contract_load();
    var res = self~$ContractWithOptionals$_fun_testVariables();
    return $SomeGenericStruct$_to_external(res);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.any.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://Qmf3SfLRG4VsCMFzV9Jfb4163JMNKviYaEt5W43sQuUn6i";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ContractWithOptionals
;;

((int, int, cell, slice, tuple, tuple), int) $ContractWithOptionals$_contract_router_internal((int, int, cell, slice, tuple, tuple) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$ContractWithOptionals$_internal_empty();
        return (self, true);
    }
    
    ;; Receive Update message
    if (op == 357891325) {
        var msg = in_msg~$Update$_load();
        self~$ContractWithOptionals$_internal_binary_Update(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ContractWithOptionals$_contract_load();
    
    ;; Handle operation
    int handled = self~$ContractWithOptionals$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ContractWithOptionals$_contract_store(self);
}
