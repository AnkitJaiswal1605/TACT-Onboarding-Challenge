#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "random_RandomContract.headers.fc";
#include "random_RandomContract.stdlib.fc";
#include "random_RandomContract.storage.fc";

;;
;; Contract RandomContract functions
;;

tuple $RandomContract$_contract_init() impure inline_ref {
    tuple $self = null();
    return $self;
}

(tuple, int) $RandomContract$_fun_randomInt(tuple $self) impure inline_ref {
    var ($self) = $self;
    return ($self, $global_randomInt());
}

(tuple, int) $RandomContract$_fun_random(tuple $self, int $min, int $max) impure inline_ref {
    var ($self) = $self;
    return ($self, $global_random($min, $max));
}

;;
;; Receivers of a Contract RandomContract
;;

((tuple), ()) $RandomContract$_internal_binary_Deploy(tuple $self, (int) $deploy) impure inline {
    var $self = $self;
    var ($deploy'queryId) = $deploy;
    $self~$RandomContract$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return ($self, ());
}

;;
;; Get methods of a Contract RandomContract
;;

_ %randomInt() method_id(128647) {
    var self = $RandomContract$_contract_load();
    var res = self~$RandomContract$_fun_randomInt();
    return res;
}

_ %random(int $$min, int $$max) method_id(92013) {
    int $min = $$min;
    int $max = $$max;
    var self = $RandomContract$_contract_load();
    var res = self~$RandomContract$_fun_random($min, $max);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmeNJLm4mT4TrDmCMiiPHyB5G5gv76gPrvJkmNxAqAQist";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract RandomContract
;;

(tuple, int) $RandomContract$_contract_router_internal(tuple self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$RandomContract$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $RandomContract$_contract_load();
    
    ;; Handle operation
    int handled = self~$RandomContract$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $RandomContract$_contract_store(self);
}
