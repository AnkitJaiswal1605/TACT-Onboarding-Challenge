opcodes:
  # A.2.1. Basic stack manipulation primitives.
  XCHG: ["int", "int"]
  XCHG2: ["int", "int"]
  XCHG3: ["int", "int", "int"]
  PUSH: ["int"]
  PUSH2: ["int", "int"]
  PUSH3: ["int", "int", "int"]
  POP: ["int"]

  # A.2.2. Compound stack manipulation primitives.
  XCPU: ["int", "int"]
  XCPU2: ["int", "int", "int"]
  XCPUXC: ["int", "int", "int"]
  XC2PU: ["int", "int", "int"]
  PUXC: ["int", "int"]
  PUXC2: ["int", "int", "int"]
  PU2XC: ["int", "int", "int"]
  PUXCPU: ["int", "int", "int"]

  # A.2.3. Exotic stack manipulation primitives.
  BLKSWAP: ["int", "int"]
  ROT:
  ROTREV:
  SWAP2:
  DROP2:
  DUP2:
  OVER2:
  REVERSE: ["int", "int"]
  BLKDROP: ["int"]
  BLKPUSH: ["int", "int"]
  PICK:
  BLKSWX:
  DROPX:
  TUCK:
  XCHGX:
  DEPTH:
  CHKDEPTH:
  ONLYTOPX:
  ONLYX:
  BLKDROP2: ["int", "int"]
  ROLLX:
  ROLLREVX:
  REVX:

  # A.3.1. Null primitives.
  "NULL": []
  ISNULL: []

  # A.3.2. Tuple primitives.
  TUPLE: ["int"]
  INDEX: ["int"]
  UNTUPLE: ["int"]
  UNPACKFIRST: ["int"]
  CHKTUPLE:
  EXPLODE: ["int"]
  SETINDEX: ["int"]
  INDEXQ: ["int"]
  SETINDEXQ: ["int"]
  TUPLEVAR:
  INDEXVAR:
  UNTUPLEVAR:
  UNPACKFIRSTVAR:
  EXPLODEVAR:
  SETINDEXVAR:
  INDEXVARQ:
  SETINDEXVARQ:
  TLEN:
  QTLEN:
  ISTUPLE:
  LAST:
  TPUSH:
  TPOP:
  NULLSWAPIF:
  NULLSWAPIFNOT:
  NULLROTRIF:
  NULLROTRIFNOT:
  NULLSWAPIF2:
  NULLSWAPIFNOT2:
  NULLROTRIF2:
  NULLROTRIFNOT2:
  INDEX2: ["int", "int"]
  CADR:
  CDDR:
  CADDR:
  CDDDR:
  INDEX3: ["int", "int", "int"]

  # A.4.1. Integer and boolean constants.
  PUSHINT: ["bigint"]
  PUSHPOW2: ["int"]
  PUSHNAN:
  PUSHPOW2DEC: ["int"]
  PUSHNEGPOW2: ["int"]

  # A.4.2. Constant slices, continuations, cells, and references.
  PUSHREF: ["cell"]
  PUSHREFSLICE: ["cell"]
  PUSHREFCONT: ["cell"]
  PUSHSLICE: ["cell", "int", "int", "int", "int"] # source ref,  offset bits, offset refs, bits, refs
  PUSHCONT: ["cell", "int", "int", "int", "int"] # source ref, offset bits, offset refs, bits, refs

  # A.5.1. Addition, subtraction, multiplication.
  ADD:
  SUB:
  SUBR:
  ADDCONST: ["int"]
  MULCONST: ["int"]
  MUL:

  # A.5.2. Division.
  DIV: ["bool", "int", "bool", "int", "int"]

  # A.5.3. Shifts, logical operations.
  LSHIFT: ["int"]
  RSHIFT: ["int"]
  LSHIFTX: []
  RSHIFTX: []
  POW2:
  AND:
  OR:
  XOR:
  NOT:
  FITS: ["int"]
  UFITS: ["int"]
  FITSX:
  UFITSX:
  BITSIZE:
  UBITSIZE:
  MIN:
  MAX:
  MINMAX:
  ABS:

  # A.5.4. Quiet arithmetic primitives.
  QUIET:

  # A.6.1. Integer comparison.
  SGN:
  LESS:
  EQUAL:
  LEQ:
  GREATER:
  NEQ:
  GEQ:
  CMP:
  EQINT: ["int"]
  ISZERO:
  LESSINT: ["int"]
  ISNEG:
  ISNPOS:
  GTINT: ["int"]
  ISPOS:
  ISNNEG:
  NEQINT: ["int"]
  ISNAN:
  CHKNAN:

  # A.6.2. Other comparison.
  SEMPTY:
  SDEMPTY:
  SREMPTY:
  SDFIRST:
  SDLEXCMP:
  SDEQ:
  SDPFX:
  SDPFXREV:
  SDPPFX:
  SDPPFXREV:
  SDSFX:
  SDSFXREV:
  SDPSFX:
  SDPSFXREV:
  SDCNTLEAD0:
  SDCNTLEAD1:
  SDCNTTRAIL0:
  SDCNTTRAIL1:

  # A.7.1. Cell serialization primitives.
  NEWC:
  ENDC:
  STI: ["int"]
  STU: ["int"]
  STREF:
  STBREFR:
  STSLICE:
  STIX:
  STUX:
  STIXR:
  STUXR:
  STIXQ:
  STUXQ:
  STIXRQ:
  STUXRQ:
  STIR: ["int"]
  STUR: ["int"]
  STIQ: ["int"]
  STUQ: ["int"]
  STIRQ: ["int"]
  STURQ: ["int"]
  STBREF:
  STB:
  STREFR:
  STSLICER:
  STBR:
  STREFQ:
  STBREFQ:
  STSLICEQ:
  STBQ:
  STREFRQ:
  STBREFRQ:
  STSLICERQ:
  STBRQ:
  STREFCONST:
  STREF2CONST:
  ENDXC:
  STILE4:
  STULE4:
  STILE8:
  STULE8:
  BDEPTH:
  BBITS:
  BREFS:
  BBITREFS:
  BREMBITS:
  BREMREFS:
  BREMBITREFS:
  BCHKBITS: ["int"]
  BCHKBITSX:
  BCHKREFS:
  BCHKBITREFS:
  BCHKBITSQ: ["int"]
  BCHKBITSQX:
  BCHKBITREFSQ:
  STZEROES:
  STONES:
  STSAME:
  STSLICECONST: ["cell", "int", "int", "int", "int"] # source ref, offset bits, offset refs, bits, refs
  STREF3CONST:
  BCHKREFSQ:

  # A.7.2. Cell deserialization primitives.
  CTOS:
  ENDS:
  LDI: ["int"]
  LDU: ["int"]
  LDREF:
  LDREFRTOS:
  LDSLICE: ["int"]
  LDIX:
  LDUX:
  PLDIX:
  PLDUX:
  LDIXQ:
  LDUXQ:
  PLDIXQ:
  PLDUXQ:
  PLDI: ["int"]
  PLDU: ["int"]
  LDIQ: ["int"]
  LDUQ: ["int"]
  PLDIQ: ["int"]
  PLDUQ: ["int"]
  PLDUZ: ["int"]
  LDSLICEX:
  PLDSLICEX:
  LDSLICEXQ:
  PLDSLICEXQ:
  PLDSLICE: ["int"]
  LDSLICEQ: ["int"]
  PLDSLICEQ: ["int"]
  SDCUTFIRST:
  SDSKIPFIRST:
  SDCUTLAST:
  SDSKIPLAST:
  SDSUBSTR:
  SDBEGINSX:
  SDBEGINSXQ:
  SDBEGINS:
  SDBEGINSQ:
  SCUTFIRST:
  SSKIPFIRST:
  SCUTLAST:
  SSKIPLAST:
  SUBSLICE:
  SPLIT:
  SPLITQ:
  XCTOS:
  XLOAD:
  XLOADQ:
  SCHKBITS:
  SCHKREFS:
  SCHKBITREFS:
  SCHKBITSQ:
  SCHKREFSQ:
  SCHKBITREFSQ:
  PLDREFVAR:
  SBITS:
  SREFS:
  SBITREFS:
  PLDREFIDX: ["int"]
  PLDREF:
  LDILE4:
  LDULE4:
  LDILE8:
  LDULE8:
  PLDILE4:
  PLDULE4:
  PLDILE8:
  PLDULE8:
  LDILE4Q:
  LDULE4Q:
  LDILE8Q:
  LDULE8Q:
  PLDILE4Q:
  PLDULE4Q:
  PLDILE8Q:
  PLDULE8Q:
  LDZEROES:
  LDONES:
  LDSAME:
  SDEPTH:
  CDEPTH:

  # A.8.1. Unconditional control flow primitives.
  EXECUTE:
  JMPX:
  CALLXARGS: ["int", "int"]
  JMPXARGS: ["int"]
  RETARGS: ["int"]
  RET:
  RETFALSE:
  RETBOOL:
  CALLCC:
  JMPXDATA:
  CALLCCARGS: ["int", "int"]
  CALLXVARARGS:
  RETVARARGS:
  JMPXVARARGS:
  CALLCCVARARGS:
  CALLREF: ["cell"]
  JMPREF: ["cell"]
  JMPREFDATA: ["cell"]
  RETDATA:

  # A.8.2. Conditional control flow primitives.
  IFRET:
  IFNOTRET:
  IF:
  IFNOT:
  IFJMP:
  IFNOTJMP:
  IFELSE:
  IFREF: ["cell"]
  IFNOTREF: ["cell"]
  IFJMPREF: ["cell"]
  IFNOTJMPREF: ["cell"]
  CONDSEL:
  CONDSELCHK:
  IFRETALT:
  IFNOTRETALT:
  IFREFELSE: ["cell"]
  IFELSEREF: ["cell"]
  IFREFELSEREF: ["cell"]
  IFBITJMP: ["int"]
  IFNBITJMP: ["int"]
  IFBITJMPREF: ["int"]
  IFNBITJMPREF: ["int"]

  # A.8.3. Control flow primitives: loops.
  REPEAT:
  REPEATEND:
  UNTIL:
  UNTILEND:
  WHILE:
  WHILEEND:
  AGAIN:
  AGAINEND:
  REPEATBRK:
  REPEATENDBRK:
  UNTILBRK:
  UNTILENDBRK:
  WHILEBRK:
  WHILEENDBRK:
  AGAINBRK:
  AGAINENDBRK:

  # A.8.4. Manipulating the stack of continuations.
  SETCONTARGS: ["int", "int"]
  SETCONTVARARGS:
  RETURNARGS: ["int"]
  RETURNVARARGS:
  SETNUMVARARGS:

  # A.8.5. Creating simple continuations and closures.
  BLESS:
  BLESSVARARGS:
  BLESSARGS: ["int", "int"]

  # A.8.6. Operations with continuation savelists and control registers.
  PUSHCTR: ["int"]
  POPCTR: ["int"]
  SETCONTCTR: ["int"]
  SETRETCTR: ["int"]
  SETALTCTR: ["int"]
  POPSAVE: ["int"]
  SAVE: ["int"]
  SAVEALT: ["int"]
  SAVEBOTH: ["int"]
  PUSHCTRX:
  POPCTRX:
  SETCONTCTRX:
  COMPOS:
  COMPOSALT:
  COMPOSBOTH:
  ATEXIT:
  ATEXITALT:
  SETEXITALT:
  THENRET:
  THENRETALT:
  INVERT:
  BOOLEVAL:
  SAMEALT:
  SAMEALTSAVE:

  # A.8.7. Dictionary subroutine calls and jumps.
  CALL: ["int"]
  JMP: ["int"]
  PREPARE: ["int"]

  # A.9.1. Throwing exceptions.
  THROW: ["int"]
  THROWIF: ["int"]
  THROWIFNOT: ["int"]
  THROWARG: ["int"]
  THROWARGIF: ["int"]
  THROWARGIFNOT: ["int"]
  THROWANY:
  THROWARGANY:
  THROWANYIF:
  THROWARGANYIF:
  THROWANYIFNOT:
  THROWARGANYIFNOT:

  # A.9.2. Catching and handling exceptions.
  TRY:
  TRYARGS: ["int", "int"]

  # A.10.1. Dictionary creation.
  # NEWDICT: === PUSHNULL
  # DICTEMPTY: === ISNULL

  # A.10.2. Dictionary serialization and deserialization.
  STDICTS:
  STDICT:
  SKIPDICT:
  LDDICTS:
  PLDDICTS:
  LDDICT:
  PLDDICT:
  LDDICTQ:
  PLDDICTQ:

  # A.10.3. Get dictionary operations.
  DICTGET:
  DICTGETREF:
  DICTIGET:
  DICTIGETREF:
  DICTUGET:
  DICTUGETREF:
  DICTSET:
  DICTSETREF:
  DICTISET:
  DICTISETREF:
  DICTUSET:
  DICTUSETREF:
  DICTSETGET:
  DICTSETGETREF:
  DICTISETGET:
  DICTISETGETREF:
  DICTUSETGET:
  DICTUSETGETREF:
  DICTREPLACE:
  DICTREPLACEREF:
  DICTIREPLACE:
  DICTIREPLACEREF:
  DICTUREPLACE:
  DICTUREPLACEREF:
  DICTREPLACEGET:
  DICTREPLACEGETREF:
  DICTIREPLACEGET:
  DICTIREPLACEGETREF:
  DICTUREPLACEGET:
  DICTUREPLACEGETREF:
  DICTADD:
  DICTADDREF:
  DICTIADD:
  DICTIADDREF:
  DICTUADD:
  DICTUADDREF:
  DICTADDGET:
  DICTADDGETREF:
  DICTIADDGET:
  DICTIADDGETREF:
  DICTUADDGET:
  DICTUADDGETREF:

  # A.10.5. Builder-accepting variants of Set dictionary operations.
  DICTSETB:
  DICTISETB:
  DICTUSETB:
  DICTSETGETB:
  DICTISETGETB:
  DICTUSETGETB:
  DICTREPLACEB:
  DICTIREPLACEB:
  DICTUREPLACEB:
  DICTREPLACEGETB:
  DICTIREPLACEGETB:
  DICTUREPLACEGETB:
  DICTADDB:
  DICTIADDB:
  DICTUADDB:
  DICTADDGETB:
  DICTIADDGETB:
  DICTUADDGETB:

  # A.10.6. Delete dictionary operations.
  DICTDEL:
  DICTIDEL:
  DICTUDEL:
  DICTDELGET:
  DICTDELGETREF:
  DICTIDELGET:
  DICTIDELGETREF:
  DICTUDELGET:
  DICTUDELGETREF:

  # A.10.7. “Maybe reference” dictionary operations.
  DICTGETOPTREF:
  DICTIGETOPTREF:
  DICTUGETOPTREF:
  DICTSETGETOPTREF:
  DICTISETGETOPTREF:
  DICTUSETGETOPTREF:

  # A.10.8. Prefix code dictionary operations.
  PFXDICTSET:
  PFXDICTREPLACE:
  PFXDICTADD:
  PFXDICTDEL:

  # A.10.9. Variants of GetNext and GetPrev operations.
  DICTGETNEXT:
  DICTGETNEXTEQ:
  DICTGETPREV:
  DICTGETPREVEQ:
  DICTIGETNEXT:
  DICTIGETNEXTEQ:
  DICTIGETPREV:
  DICTIGETPREVEQ:
  DICTUGETNEXT:
  DICTUGETNEXTEQ:
  DICTUGETPREV:
  DICTUGETPREVEQ:

  # A.10.10. GetMin, GetMax, RemoveMin, RemoveMax operations.
  DICTMIN:
  DICTMINREF:
  DICTIMIN:
  DICTIMINREF:
  DICTUMIN:
  DICTUMINREF:
  DICTMAX:
  DICTMAXREF:
  DICTIMAX:
  DICTIMAXREF:
  DICTUMAX:
  DICTUMAXREF:
  DICTREMMIN:
  DICTREMMINREF:
  DICTIREMMIN:
  DICTIREMMINREF:
  DICTUREMMIN:
  DICTUREMMINREF:
  DICTREMMAX:
  DICTREMMAXREF:
  DICTIREMMAX:
  DICTIREMMAXREF:
  DICTUREMMAX:
  DICTUREMMAXREF:

  # A.10.11. Special Get dictionary and prefix code dictionary operations, and constant dictionaries.
  DICTIGETJMP:
  DICTUGETJMP:
  DICTIGETEXEC:
  DICTUGETEXEC:
  DICTPUSHCONST: ["int", "cell"]
  PFXDICTGETQ:
  PFXDICTGET:
  PFXDICTGETJMP:
  PFXDICTGETEXEC:
  PFXDICTCONSTGETJMP: ["int"]
  DICTIGETJMPZ:
  DICTUGETJMPZ:
  DICTIGETEXECZ:
  DICTUGETEXECZ:

  # A.10.12. SubDict dictionary operations.
  SUBDICTGET:
  SUBDICTIGET:
  SUBDICTUGET:
  SUBDICTRPGET:
  SUBDICTIRPGET:
  SUBDICTURPGET:

  # A.11.2. Gas-related primitives.
  ACCEPT:
  SETGASLIMIT:
  BUYGAS:
  GRAMTOGAS:
  GASTOGRAM:
  COMMIT:

  # A.11.3. Pseudo-random number generator primitives.
  RANDU256:
  RAND:
  SETRAND:
  ADDRAND:

  # A.11.4. Configuration primitives.
  GETPARAM: ["int"]
  NOW:
  BLOCKLT:
  LTIME:
  RANDSEED:
  BALANCE:
  MYADDR:
  CONFIGROOT:
  CONFIGDICT:
  CONFIGPARAM:
  CONFIGOPTPARAM:

  # A.11.5. Global variable primitives.
  GETGLOBVAR:
  GETGLOB: ["int"]
  SETGLOBVAR:
  SETGLOB: ["int"]

  # A.11.6. Hashing and cryptography primitives.
  HASHCU:
  HASHSU:
  SHA256U:
  CHKSIGNU:
  CHKSIGNS:

  # A.11.7. Miscellaneous primitives.
  CDATASIZEQ:
  CDATASIZE:
  SDATASIZEQ:
  SDATASIZE:

  # A.11.8. Currency manipulation primitives.
  LDGRAMS:
  LDVARINT16:
  STGRAMS:
  STVARINT16:
  LDVARUINT32:
  LDVARINT32:
  STVARUINT32:
  STVARINT32:

  # A.11.9. Message and address manipulation primitives.
  LDMSGADDR:
  LDMSGADDRQ:
  PARSEMSGADDR:
  PARSEMSGADDRQ:
  REWRITESTDADDR:
  REWRITESTDADDRQ:
  REWRITEVARADDR:
  REWRITEVARADDRQ:

  # A.11.10. Outbound message and output action primitives.
  SENDRAWMSG:
  RAWRESERVE:
  RAWRESERVEX:
  SETCODE:
  SETLIBCODE:
  CHANGELIB:

  # A.12.2. Debug primitives as operations without side-effect.
  DEBUG: ["int"]
  DEBUGSTR: ["string"]
  # DUMPSTK:
  # DUMPSTKTOP: ["int"]
  # HEXDUMP:
  # HEXPRINT:
  # BINDUMP:
  # BINPRINT:
  # STRDUMP:
  # STRPRINT:
  # DEBUGOFF:
  # DEBUGON:
  # DUMP: ["int"]
  # PRINT: ["int"]
  # DUMPTOSFMT: ["int"]
  # LOGSTR: ["string"]
  # LOGFLUSH:
  # PRINTSTR: ["string"]

  # A.13 Codepage primitives
  SETCP: ["int"]
  SETCPX:
