/// <reference types="node" />
import { Address } from '..';
export declare type KeyRecord = {
    name: string;
    address: Address;
    kind: string;
    config: string;
    comment: string;
    publicKey: Buffer;
};
export declare function createKeyStoreKey(password: string, salt: Buffer): Promise<{
    secretKey: Buffer;
    publicKey: Buffer;
}>;
export declare class KeyStore {
    #private;
    static createNew(password: string): Promise<KeyStore>;
    static load(source: Buffer): Promise<KeyStore>;
    private constructor();
    get allKeys(): KeyRecord[];
    checkPassword: (password: string) => Promise<boolean>;
    hasKey: (name: string) => boolean;
    getKey: (name: string) => KeyRecord | null;
    getSecret: (name: string, password: string) => Promise<Buffer>;
    addKey: (record: KeyRecord, key: Buffer) => Promise<void>;
    removeKey: (name: string) => void;
    save(): Promise<Buffer>;
}
